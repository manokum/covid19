{"version":3,"sources":["components/Cases/Cases.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.jpg","App.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","components/Cases/CasesByRate.jsx","components/IndiaState/IndiaByState.jsx","components/IndiaAllDistrict/IndiaAllDistrict.jsx","App.js","index.js","components/IndiaAllDistrict/IndiaAllDistrict.module.css","components/IndiaState/IndiaByState.module.css","components/Cards/Cards.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","indiaDailyValue","statewise","states","state","lastupdatedtime","Chart","console","log","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","pop","borderColor","borderWidth","fontSize","position","maintainAspectRatio","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Info","flashColor","Date","toDateString","toLocaleTimeString","TableContainer","component","Paper","Table","customers","aria-label","TableHead","fontWeight","TableRow","TableCell","testPadding","colorRed1","colorGreen1","testPadding1","TableBody","scope","colorRed","colorGreen","Number","toFixed","font8","CasesByRate","row","IndiaByState","React","firstName","setFirstName","lastName","setLastName","allStateData","setallStateData","fetch","then","results","json","window","result","allSt","Object","keys","accepted","type","indexOf","filterTypes","test","values","test1","districtData","test2","test3","entries","product","delta","arrowCss","icons","arrowN","active","deceased","IndiaAllDistrict","datato","testlatlong","handleChange","event","handleSubmit","t","array","JSON","parse","stringify","replace","user","post","res","setState","this","length","district","districtZoneType","red","green","orange","Component","App","basename","image","src","alt","navcenter","role","navbar","navwrapper","exact","activeClassName","navbar__link__active","navbar__link","to","removeborder","globe","castle","homes","path","CountryPicker","Cards","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8d6de9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cases_container__Dk1Kb\",\"customers\":\"Cases_customers__vXvDs\",\"testPadding\":\"Cases_testPadding__isG9K\",\"colorRed\":\"Cases_colorRed__17TAq\",\"colorGreen\":\"Cases_colorGreen__2Cs8B\",\"font8\":\"Cases_font8__2PdIx\",\"font11\":\"Cases_font11__14_SL\",\"fontWeight\":\"Cases_fontWeight__2N_VM\",\"colorRed1\":\"Cases_colorRed1__3iYfG\",\"colorGreen1\":\"Cases_colorGreen1__UawZi\",\"testPadding1\":\"Cases_testPadding1__3oeC4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.2ce01c11.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"image1\":\"App_image1__2PO85\",\"MuiCardContent-root\":\"App_MuiCardContent-root__VrPBm\",\"navcenter\":\"App_navcenter__bgi5A\",\"navbar\":\"App_navbar__3gDlA\",\"navbar__link\":\"App_navbar__link__2gPI6\",\"navbar__link__active\":\"App_navbar__link__active__F5ujP\",\"removeborder\":\"App_removeborder__3eSW8\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\nconst url1 = 'https://api.covid19india.org/data.json';\nconst url2 = 'https://api.covid19india.org/state_district_wise.json';\nconst url3= 'https://newsapi.org/v2/top-headlines?country=in&apiKey=ac385d82856b4df09ca19e740e16eac3';\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const indiaDailyValue = async () => {\n  try{\n    const { data} = await axios.get(`${url1}`);\n\n    // return countries.map((country) => country.name);\n    return data.statewise.map(({ confirmed, deaths, recovered, state ,lastupdatedtime}) => ({ confirmed: confirmed, deaths: deaths, recovered : recovered,states : state ,lastupdatedtime: lastupdatedtime}));\n  } catch(err){\n    return err;\n  }\n};\n\nexport const indiaStateValue = async () => {\n  try{\n    const { data} = await axios.get(`${url2}`);\n\n    return data;\n    //return data.statewise.map(({ confirmed, deaths, recovered, state }) => ({ confirmed: confirmed, deaths: deaths, recovered : recovered,states : state}));\n  } catch(err){\n    return err;\n  }\n};\n\nexport const fetchNewsData = async () => {\n  try {\n    const { data } = await axios.get(`${url3}`);\n\n    return data.articles;\n  } catch (error) {\n    return error;\n  }\n};","import React, { useState, useEffect } from 'react';\nimport { Line, Polar, HorizontalBar,Bubble,Pie,Bar } from 'react-chartjs-2';\nimport { Doughnut,Scatter } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  console.log(\"Chart\",Chart)\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Pie\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'No of People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    \n    dailyData[0] ? (\n      \n      <Bar\n      data={{\n        labels: [[...dailyData].pop().date],\n        datasets: [\n          {\n            label: 'Confirmed',\n            backgroundColor: 'rgba(0, 0, 255, 0.5)',\n            borderColor: 'rgba(0, 0, 255, 0.5)',\n            borderWidth: 2,\n            data: [[...dailyData].pop().confirmed]\n          },\n          {\n            label: 'Deaths',\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\n            borderColor: 'rgba(0, 255, 0, 0.5)',\n            borderWidth: 2,\n            data: [[...dailyData].pop().deaths]\n          }\n        ]\n      }}\n      options={{\n        title:{\n          display:true,\n          text:'World Data',\n          fontSize:10\n        },\n        legend:{\n          display:true,\n          position:'bottom'\n        },\n         maintainAspectRatio: false ,\n    //     scales: {\n    //       yAxes: [{\n    //            gridLines: {\n    //               display: false,\n    //           }\n    //       }]\n    //  }\n      }\n    }\n      />\n      // <Line\n      // data={{\n      //   labels: dailyData.map(({ date }) => date),\n      //   datasets: [{\n      //     data: dailyData.map((data) => data.confirmed),\n      //     label: 'Infected',\n      //     borderColor: '#3333ff',\n      //     fill: true,\n      //   }, {\n      //     data: dailyData.map((data) => data.deaths),\n      //     label: 'Deaths',\n      //     borderColor: 'red',\n      //     backgroundColor: 'rgba(255, 0, 0, 0.5)',\n      //     fill: true,\n      //   },\n      //   ],\n      // }}\n    ///>\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n  \n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">World</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n      \n  \n  return (\n    <div className={styles.container}>\n      {/* <Grid container spacing={3} justify=\"center\">\n      \n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={confirmed.value} duration={1} separator=\",\" />\n              \n            </Typography>\n           \n          \n            <Typography variant=\"body2\" component=\"p\">\n              No of active cases\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n            \n              Recovered : <span className={(Number(((recovered.value)/(confirmed.value)*100)).toFixed(0))  > 25 ? styles.class3 : styles.class1 }>{Number(((recovered.value)/(confirmed.value)*100)).toFixed(0) }%</span>\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={recovered.value} duration={1} separator=\",\" />\n            </Typography>\n            \n            <Typography>\n            \n            </Typography>\n            <Typography></Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              No.of recoveries made\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths : <span className={(Number(((deaths.value)/(confirmed.value)*100)).toFixed(0))  > 5 ? styles.class1 : styles.class2 }>{Number(((deaths.value)/(confirmed.value)*100)).toFixed(0) }%</span>\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={deaths.value} duration={1} separator=\",\" />\n            </Typography>\n           \n            <Typography variant=\"body2\" component=\"p\">\n              Number of deaths COVID19.   \n            </Typography>\n            <Typography>\n            \n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card)}>\n        <CardContent>\n        <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            </CardContent>\n        </Grid>\n        \n      </Grid> */}\n\n{/* <table className={styles.customers}>\n<caption className = {styles.flashColor}>Last Updated : {new Date(lastUpdate).toDateString()} {new Date(lastUpdate).toLocaleTimeString()} </caption>\n   \n      <thead>\n        <tr>\n         <th>Confirmed</th>\n          <th>Recovered</th>\n          <th>Recovered Rate</th>\n          <th>Deaths</th>\n          <th>Deaths Rate</th>\n          \n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>{confirmed.value}</td>\n            <td>{recovered.value}</td>\n            <td><span className={(Number(((recovered.value)/(confirmed.value)*100)).toFixed(0))> 25 ? styles.class3 : styles.class1 }>{Number(((recovered.value)/(confirmed.value)*100)).toFixed(0) }%</span></td>\n            <td>{deaths.value}</td>\n            <td><span className={(Number(((deaths.value)/(confirmed.value)*100)).toFixed(0))  > 5 ? styles.class1 : styles.class2 }>{Number(((deaths.value)/(confirmed.value)*100)).toFixed(0) }%</span></td>\n          </tr>  \n    \n      </tbody>\n    </table>  */}\n<caption className = {styles.flashColor}>Last Updated : {new Date(lastUpdate).toDateString()} {new Date(lastUpdate).toLocaleTimeString()} </caption>\n<TableContainer component={Paper}>\n      <Table className={styles.customers} aria-label=\"simple table\">\n        <TableHead className={styles.fontWeight}>\n          <TableRow>\n            <TableCell className={styles.fontWeight}>Confirmed</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorRed1}>Recovered</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorGreen1}>R Rate.</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding1}>Deaths</TableCell>\n            <TableCell className={styles.fontWeight} className={styles.testPadding1}>D Rate.</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          \n            <TableRow >\n              <TableCell component=\"th\" scope=\"row\" className={styles.fontWeight} className={styles.testPadding1}>\n              {confirmed.value}\n              </TableCell>\n              <TableCell  className={styles.colorRed} className={styles.colorRed}>{recovered.value}</TableCell>\n              <TableCell  className={styles.colorGreen} className={styles.colorGreen}>{Number(((recovered.value)/(confirmed.value)*100)).toFixed(0) }%</TableCell>\n              <TableCell   className={styles.testPadding}>{deaths.value}</TableCell>\n              <TableCell  className={styles.font8}>{Number(((deaths.value)/(confirmed.value)*100)).toFixed(0) }%</TableCell>\n              \n            </TableRow>\n       \n        </TableBody>\n      </Table>\n    </TableContainer>\n    </div>\n  );\n};\nexport default Info;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { Line, Polar, HorizontalBar,Bubble,Pie,Bar } from 'react-chartjs-2';\nimport { indiaDailyValue } from '../../api';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport styles from './Cases.module.css';\n\nconst CasesByRate = ({  data: { confirmed, deaths, recovered, states,lastupdatedtime } }) => {\n  \n  const [state,setCountries] = useState([]);\n  console.log(\"data CasesByRate\",state)\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await indiaDailyValue());\n    };\n    fetchAPI();\n  }, []);\n\n  const options = {\n    scales: {\n         xAxes: [{\n             stacked: true\n         }],\n         yAxes: [{\n             stacked: true\n         }]\n     }\n }\n\n let data ={ \n   datasets:[{\n     label: 'Confirmed',\n       data: state.map((data) => data.confirmed),\n       backgroundColor: ['rgba(0, 0, 255, 0.5)'],\n     },\n     {\n       label: 'Deaths',\n       data: state.map((data) => data.deaths),\n       backgroundColor: ['rgba(0, 255, 0, 0.5)'],\n     },\n     {\n        label: 'Recovered',\n        data: state.map((data) => data.recovered),\n        backgroundColor: ['rgba(255, 0, 0, 0.5)'],\n      },\n    //   {\n    //     label: 'states',\n    //     data: state.map((data) => data.states),\n    //     backgroundColor: ['rgba(255, 0, 0, 0.5)'],\n    //   }\n    ],\n   labels:['India']\n }\n\n  const barChart = (\n    confirmed ? (\n      <Bar \n      data={data}\n       options={options}\n           \n            \n           \n        // }}\n        // data={{\n        //   labels: ['Infected', 'Recovered', 'Deaths','State'],\n        //   datasets: [\n        //     {\n        //       label: 'No of People',\n        //       backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        //       data: state.map((data) => data.confirmed),\n        //     },\n        //   ],\n        // }}\n        // options={{\n        //   legend: { display: false },\n        //   title: { display: true, text: `Current state in ${country}` },\n        // }}\n      />\n    ) : null\n  );\n\n  return (\n    // <FormControl className={styles.formControl}>\n    //   <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n    //     <option value=\"\">Global</option>\n    //     {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n    //   </NativeSelect>\n    // </FormControl> confirmed, deaths, recovered,\n    /**\n     * \n     * .data.map((product,i) => (\n          <tr key={i}>\n     */\n    <div className={styles.container}>\n    {/* { <table className={styles.customers}>\n      <caption>All States Data</caption>\n      <thead>\n        <tr>\n          <th>States</th>\n          <th>Confirmed</th>\n          <th>Recovered</th>\n          <th>Deaths</th>\n          \n          <th>Last Updated</th>\n        </tr>\n      </thead>\n      <tbody >\n        {state.map((product,i) => (\n          <tr key={i}>\n            <td>{product.states}</td>\n            <td className={styles.colorRed}>{product.confirmed}</td>\n           \n            <td  className={styles.colorGreen}><div>{product.recovered}</div><div>{Number(((product.recovered)/(product.confirmed)*100)).toFixed(0)  }%</div></td>\n            <td><div>{product.deaths} </div><div>{Number(((product.deaths)/(product.confirmed)*100)).toFixed(0)  }%</div></td>\n            <td className={styles.font8}>{product.lastupdatedtime}</td> \n          </tr>\n        ))}\n      </tbody>\n    </table> } */}\n\n<TableContainer component={Paper}>\n      <Table className={styles.customers} aria-label=\"simple table\">\n        <TableHead className={styles.fontWeight}>\n          <TableRow>\n            <TableCell className={styles.fontWeight}>States</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorRed1}>Confirmed</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorGreen1}>Recovered</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding1}>Deaths</TableCell>\n            <TableCell className={styles.fontWeight} className={styles.testPadding1}>Last Updated</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {state.map((row,i) => (\n            <TableRow key={i}>\n              <TableCell component=\"th\" scope=\"row\" className={styles.fontWeight} className={styles.testPadding1}>\n                {row.states}\n              </TableCell>\n              <TableCell  className={styles.colorRed} className={styles.colorRed}>{row.confirmed}</TableCell>\n              <TableCell  className={styles.colorGreen} className={styles.colorGreen}><div>{row.recovered}</div><div>{Number(((row.recovered)/(row.confirmed)*100)).toFixed(0)  }%</div></TableCell>\n              <TableCell   className={styles.testPadding}><div>{row.deaths} </div><div>{Number(((row.deaths)/(row.confirmed)*100)).toFixed(0)  }%</div></TableCell>\n              <TableCell  className={styles.font8}>{row.lastupdatedtime}</TableCell>\n              \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n\n  </div>\n  );\n};\n\n\n\n\nexport default CasesByRate;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { Line, Polar, HorizontalBar,Bubble,Pie,Bar } from 'react-chartjs-2';\nimport { indiaStateValue } from '../../api';\nimport icons from 'glyphicons'  \n\nimport styles from './IndiaByState.module.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst IndiaByState = ({ data }) => {\n  \n  // const [state,setCountries] = useState([]);\n  // console.log(\"data IndiaByState\",[state])\n\n  \n  // useEffect(() => {\n  //   const fetchAPI = async () => {\n  //     setCountries(await indiaStateValue());\n  //   };\n  //   fetchAPI();\n  const [firstName, setFirstName] = React.useState(null);\n  const [lastName, setLastName] = React.useState(null);\n  const [allStateData, setallStateData] = React.useState(null);\n  \n  React.useEffect(() => {\n    fetch('https://api.covid19india.org/state_district_wise.json')\n      .then(results => results.json())\n      .then(data => {\n        console.log(\"data\",data)\n        window.data= data;\n         const [name] = [data];\n         function filterTypes(accepted) {\n      \n          for (var type in window.data)\n              if (accepted.indexOf(type) > -1) \n              window.result[type] = window.data[type];\n          console.log(\"result\", window.result);\n      }\n  \n      // console.log(\"const [name] = [data];\",[name])\n      window.result = {}  \n  \n  console.log(\"widnow Data\",window.data)\n  const allSt = Object.keys(window.data);\n  console.log(\"widnow allSt\",allSt)\n  setallStateData(allSt);\n  filterTypes(['Andaman and Nicobar Islands']);\n  console.log(\"window.result\",window.result)\n  const test  = Object.values(window.result);\n  console.log(\"window.result['key'].districtData\",test);\n  const test1 = test[0].districtData;\n  console.log(\"test1\",test1)\n  Object.keys(test1);\n  const test2 = Object.keys(test1);\n  const test3 = Object.entries(test1);\n  console.log(\"test2\",test2)\n  console.log(\"test3\",test3)\n     setFirstName(test3);\n     setLastName(test2);\n        \n      });\n\n\n\n  }, []);\n\n  // if(!state) {\n   \n  //   window.result = {};\n  //   function filterTypes(accepted) {\n      \n  //     for (var type in state)\n  //         if (accepted.indexOf(type) > -1) \n  //         window.result[type] = state[type];\n  //     console.log(\"result\", window.result);\n  // }\n  // filterTypes(['Maharashtra']);\n\n  // }\n  function handleCountryChange(e){\n    console.log(\"inside handleCountryChange\",e)\n    window.result = {};\n    for (var type in window.data)\n    if (e.indexOf(type) > -1) \n    window.result[type] = window.data[type];\n    console.log(\"widnow Data\",window.data)\n    const allSt = Object.keys(window.data);\n    console.log(\"widnow allSt\",allSt)\n    setallStateData(allSt);\n    //filterTypes(['Jharkhand']);\n    \n    console.log(\"window.result\",window.result)\n    const test  = Object.values(window.result);\n    console.log(\"window.result['key'].districtData\",test);\n    const test1 = test[0].districtData;\n    console.log(\"test1\",test1)\n    Object.keys(test1);\n    const test2 = Object.keys(test1);\n    const test3 = Object.entries(test1);\n    console.log(\"test2\",test2)\n    console.log(\"test3\",test3)\n       setFirstName(test3);\n       setLastName(test2);\n    \n  }\n  return (\n    <div className={styles.container}>\n      {!firstName || !lastName  || !allStateData ? 'Loading...' : \n       <div>\n        <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        {/* <option value=\"\">Assam</option> */}\n        {allStateData.map((product, i) => <option key={i} value={product}>{product}</option>)}\n      </NativeSelect>\n    </FormControl>\n     \n      {/* <table className={styles.customers}>\n      <caption>All States Data</caption>\n      <thead>\n        <tr>\n         <th>District</th>\n          <th>Confirmed</th>\n          <th>Active</th>\n          <th>Deaths</th>\n          <th>Recovered</th>\n          \n        </tr>\n      </thead>\n      <tbody>\n        {firstName.map((product,i) => (\n          <tr key={i}>\n            <td className={styles.tdBreak}>{product[0]}</td>\n            <td className={(product[1].confirmed)  > 25 ? styles.class3 : styles.class1 }><div>{product[1].confirmed}  </div><div>{product[1].delta.confirmed}<span className={styles.arrowCss}>{icons.arrowN}</span></div></td>\n            <td>{product[1].active}</td>\n            <td><div>{product[1].deceased}</div> <div>{product[1].delta.deceased}<span className={styles.arrowCss}>{icons.arrowN}</span></div></td>\n            <td><div>{product[1].recovered}</div><div>{product[1].delta.recovered}<span className={styles.arrowCss}>{icons.arrowN}</span></div></td>\n            \n          </tr>\n        ))}\n      </tbody>\n    </table>  */}\n    \n    <TableContainer component={Paper}>\n      <Table className={styles.customers} aria-label=\"simple table\">\n        <TableHead className={styles.fontWeight}>\n          <TableRow>\n            <TableCell className={styles.fontWeight}>District</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorRed1}>Confirmed</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorGreen1}>Active</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding1}>Deaths</TableCell>\n            <TableCell className={styles.fontWeight} className={styles.testPadding1}>Recovered</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {firstName.map((product,i) => (\n            <TableRow key={i}>\n              <TableCell component=\"th\" scope=\"row\" className={styles.fontWeight} className={styles.testPadding1}>\n              {product[0]}\n              </TableCell>\n              <TableCell  className={styles.colorRed} className={styles.colorRed}><div>{product[1].confirmed}  </div><div>{product[1].delta.confirmed}<span className={styles.arrowCss}>{icons.arrowN}</span></div></TableCell>\n              <TableCell  className={styles.colorGreen} className={styles.colorGreen}>{product[1].active}</TableCell>\n              <TableCell   className={styles.testPadding}><div>{product[1].deceased}</div> <div>{product[1].delta.deceased}<span className={styles.arrowCss}>{icons.arrowN}</span></div></TableCell>\n              <TableCell  className={styles.font8}><div>{product[1].recovered}</div><div>{product[1].delta.recovered}<span className={styles.arrowCss}>{icons.arrowN}</span></div></TableCell>\n              \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    \n    </div>}\n    </div>\n    \n\n  );\n};\n\n\n\n\nexport default IndiaByState;\n","import React from 'react';\nimport axios from 'axios';\nimport SelectSearch from 'react-select-search';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n// import TextField from '@material-ui/core/TextField';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\nimport styles from './IndiaAllDistrict.module.css';\n\nexport default class IndiaAllDistrict extends React.Component {\n  state = {\n    datato :[],\n    testlatlong: []\n  }\n  \n  handleChange = event => {\n    console.log(\"event\",event)\n    //const test = [event];\n    //console.log(\"test\",test)\n    //this.setState({ testlatlong: test });\n    this.handleSubmit(event);\n  }\n\n  handleSubmit = (t) => {\n    //event.preventDefault();\n    console.log(\"value of t\",t)\n    var array = JSON.parse(\"[[\" + t + \"]]\");\n    const string = JSON.stringify(t);\n    string.replace (/\"/g,''); \nconsole.log(\"inside submit string\",array)\n    const user = {\n      \"latlngs\":array,\n      \"key\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtYWlsSWRlbnRpdHkiOiJtYW5vcmFuamFua3VtQGdtYWlsLmNvbSJ9.65QsDiBeKvnUnswtFjmfTEUrUt6tiaPZ92_1jvQMsCo\"\n    };\n\n    axios.post(`https://data.geoiq.io/dataapis/v1.0/covid/locationcheck`,  user )\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n       //this.state.datato = res.data;\n       this.setState({\n        datato: res.data\n      });\n      })\n      console.log(\"this.state.datato\",this.state.datato)\n  }\n\n\n\n  render() {\n    const options = [\n      {name: 'Bangalore', value: [[12.959743999999999,77.6470528]]},\n      {name: 'Mumbai', value: [[19.0760 ,72.8777]]}, \n      {name: 'Dhanbad', value: [[23.80039349,86.41998572]]},\n      {name: 'Jamshedpur', value: [[22.78753542\t ,86.19751868]]},\n      {name: 'Ranchi', value: [[23.37000633,85.33002641]]},\n      {name: 'Bokaro', value: [[ 23.6693,86.1511]]},\n      {name: 'Pune', value: [[ 18.5204,73.8567]]},\n      {name: ' Andaman And Nicobar', value: [[ 11.66702557,92.73598262]]},\n      {name: 'Andhra Pradesh', value: [[ 14.7504291,78.57002559]]},\n  \n  \n      {name: 'Arunachal Pradesh', value: [[27.10039878,93.61660071]]},\n      {name: 'Assam', value: [[26.7499809,94.21666744]]}, \n      {name: 'Bihar', value: [[25.78541445,87.4799727]]},\n      {name: 'Delhi', value: [[28.6699929,77.23000403]]},\n      {name: 'Kerala', value: [[8.900372741,76.56999263]]},\n      {name: 'Bokaro', value: [[ 23.6693,86.1511]]},\n      {name: 'Pune', value: [[ 18.5204,73.8567]]},\n      {name: ' Andaman And Nicobar', value: [[ 11.66702557,92.73598262]]},\n      {name: 'Andhra Pradesh', value: [[ 14.7504291,78.57002559]]},\n      \n      \n      \n       \n      // Chandigarh (1)\t30.71999697\t76.78000565\n      // Chhattisgarh (3)\t22.09042035\t82.15998734\n      // Dadra And Nagar Haveli (12)\t20.26657819\t73.0166178\n     \n      // Goa (1)\t15.491997\t73.81800065\n      // Haryana (10)\t28.45000633\t77.01999101\n      // Himachal Pradesh (2)\t31.10002545\t77.16659704\n      // Jammu And Kashmir (4)\t34.29995933\t74.46665849\n      // Jharkhand (3)\t23.80039349\t86.41998572\n      // Karnataka (16)\t12.57038129\t76.91999711\n       \n      // Lakshadweep (1)\t10.56257331\t72.63686717\n      // Madhya Pradesh (8)\t21.30039105\t76.13001949\n      // Maharashtra (20)\t19.25023195\t73.16017493\n      // Manipur (1)\t24.79997072\t93.95001705\n      // Meghalaya (1)\t25.57049217\t91.8800142\n      // Mizoram (1)\t23.71039899\t92.72001461\n      // Nagaland (1)\t25.6669979\t94.11657019\n      // Orissa (6)\t19.82042971\t85.90001746\n      // Puducherry (1)\t11.93499371\t79.83000037\n      // Punjab (6)\t31.51997398\t75.98000281\n      // Rajasthan (12)\t26.44999921\t74.63998124\n      // Sikkim (1)\t27.3333303\t88.6166475\n      // Tamil Nadu (19)\t12.92038576\t79.15004187\n      // Tripura (1)\t23.83540428\t91.27999914\n      // Uttar Pradesh (29)\t27.59998069\t78.05000565\n      // Uttaranchal (1)\t30.32040895\t78.05000565\n      // West Bengal (10)\t22.58039044\t88.32994665\t\n  ];\n    return (\n      <div>\n        {/* <form onSubmit={this.handleSubmit}>\n          <label>\n            Name:\n            <input type=\"text\" name=\"name\" onChange={this.handleChange} />\n          </label>\n          <button type=\"submit\">Search</button>\n        </form> */}\n        {/* <SelectSearch options={options} defaultValue=\"sv\" name=\"language\" placeholder=\"Choose your language\" /> */}\n\n        <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\"  onChange={(e) => this.handleChange(e.target.value)} >\n        <option value=\"\">Select State/District</option>\n        {options.map((country, i) => <option key={i} value={country.value}>{country.name}</option>) }\n      </NativeSelect>\n    </FormControl>\n    {/* <Autocomplete\n      id=\"combo-box-demo\"\n      options={options}\n      getOptionLabel={(option) => option.name}\n      style={{ width: 300 }}\n      renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\n    /> */}\n        { this.state.datato.length != 0  ? <table className={styles.customers}>\n      <caption>Zone Data</caption>\n      <thead>\n        <tr>\n         <th>Zone </th>\n          <th>Zone Type</th>\n          \n        </tr>\n      </thead>\n      <tbody>\n        {this.state.datato.data.map((product,i) => (\n          <tr key={i}>\n            <td>{product.district}</td>\n            <td className={product.districtZoneType.length === 8 ? styles.red : product.districtZoneType.length === 10 ? styles.green : styles.orange }>{product.districtZoneType}</td>\n          </tr>\n        ))}\n        {/* <tr><td>{this.state.datato.data[0].containmentsAvailability}</td></tr> */}\n      </tbody>\n        </table> : <p>Please enter state name to see data</p>}\n\n      </div>\n    )\n  }\n}","import React from 'react';\n\nimport { Cards, CountryPicker, Chart,CasesByRate,IndiaByState,IndiaAllDistrict,AllNews } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\nimport { NavLink } from 'react-router-dom';\nimport image from './images/image.jpg';\nimport icons from 'glyphicons'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter,\n  Link\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <HashRouter basename='/'>\n      {/* <Router> */}\n      <div className={styles.container}>\n       \n\n<img className={styles.image} src={image} alt=\"COVID-19\" />\n<nav className={styles.navcenter} role=\"navigation\" className={styles.navbar} >\n    {/* <div className={styles.navwrapper}>\n    <ul>\n            <li>\n              <Link to=\"/\">Indian State Data</Link>\n            </li>\n            <li>\n              <Link to=\"/world\">World Statistics</Link>\n            </li>\n            <li>\n              <Link to=\"/india\">India All State</Link>\n            </li>\n            <li>\n              <Link to=\"/zonedata\">India Zone Data</Link>\n            </li>\n          </ul>\n    </div> */}\n    <div className={styles.navwrapper}>\n    <NavLink\n      exact\n      activeClassName={styles.navbar__link__active}\n      className={styles.navbar__link}\n      to=\"/\"\n    >\n      {/* <img\n    src=\"./images/image.jpg\"\n    alt=\"Unactive Link Image\"\n    height=\"45\"\n    width=\"45\" \n  /> */} \n  <span className={styles.removeborder}>{icons.globe}</span>\n      World\n    </NavLink>\n    <NavLink\n      activeClassName={styles.navbar__link__active}\n      className={styles.navbar__link}\n      to=\"/indiaall\"\n    >  <span className={styles.removeborder}>{icons.castle}</span>\n      India\n    </NavLink>\n    <NavLink\n      activeClassName={styles.navbar__link__active}\n      className={styles.navbar__link}\n      to=\"/india\"\n    ><span className={styles.removeborder}>{icons.map}</span>\n      State\n    </NavLink>\n    <NavLink\n      activeClassName={styles.navbar__link__active}\n      className={styles.navbar__link}\n      to=\"/zonedata\"\n    ><span className={styles.removeborder}>{icons.homes}</span>\n      Zone\n    </NavLink>\n    </div>\n</nav>\n\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n        <Route exact path=\"/\">\n          <div className={styles.container}>\n          {/* <img className={styles.image} src={image} alt=\"COVID-19\" /> */}\n        \n          <div className={styles.container}>\n          \n          <CountryPicker handleCountryChange={this.handleCountryChange} />\n           <Chart data={data} country={country} /> \n           <Cards data={data} />\n          {/* < AllNews/> */}\n           </div>\n          {/* <IndiaAllDistrict/> */}\n          {/* <CasesByRate data={data} /> */}\n          </div>\n          </Route>\n          <Route exact path=\"/indiaall\">\n          <div className={styles.container}>\n          <CasesByRate data={data} />\n          </div>\n          \n          </Route>\n          <Route exact path=\"/india\">\n          <IndiaByState/>\n          </Route>\n          <Route exact path=\"/zonedata\">\n          <div className={styles.container}>\n          <IndiaAllDistrict/>\n          </div>\n          </Route>\n         \n        </Switch>\n      </div>\n    {/* </Router> */}\n      {/* // <div className={styles.container}>\n      //   <img className={styles.image} src={image} alt=\"COVID-19\" />\n      //   <CountryPicker handleCountryChange={this.handleCountryChange} />\n      //   <Chart data={data} country={country} /> \n      //   <Cards data={data} />\n      //   <CasesByRate data={data} /> */}\n     \n     </HashRouter>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IndiaAllDistrict_container__2_Fgs\",\"customers\":\"IndiaAllDistrict_customers__3lRIm\",\"class1\":\"IndiaAllDistrict_class1__Brph_\",\"class3\":\"IndiaAllDistrict_class3__2x5_h\",\"formControl\":\"IndiaAllDistrict_formControl__1UMJQ\",\"green\":\"IndiaAllDistrict_green__PjCPt\",\"red\":\"IndiaAllDistrict_red__3BJ7v\",\"orange\":\"IndiaAllDistrict_orange__2oJAT\",\"font8\":\"IndiaAllDistrict_font8__3N7Cl\",\"font11\":\"IndiaAllDistrict_font11__3Y3_j\",\"fontWeight\":\"IndiaAllDistrict_fontWeight__w1gh-\",\"colorRed1\":\"IndiaAllDistrict_colorRed1__1UKua\",\"colorGreen1\":\"IndiaAllDistrict_colorGreen1__78DxU\",\"testPadding\":\"IndiaAllDistrict_testPadding__qN4_9\",\"testPadding1\":\"IndiaAllDistrict_testPadding1__38e4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IndiaByState_container__3gYJP\",\"customers\":\"IndiaByState_customers__rdqWe\",\"class1\":\"IndiaByState_class1__3Q5gh\",\"class3\":\"IndiaByState_class3__2gSmu\",\"formControl\":\"IndiaByState_formControl__3XmAD\",\"arrowCss\":\"IndiaByState_arrowCss__DbDFq\",\"font8\":\"IndiaByState_font8__3S-QS\",\"font11\":\"IndiaByState_font11__1Q9aM\",\"fontWeight\":\"IndiaByState_fontWeight__2ClJ1\",\"colorRed1\":\"IndiaByState_colorRed1__1OpWu\",\"colorGreen1\":\"IndiaByState_colorGreen1__1a3NH\",\"testPadding\":\"IndiaByState_testPadding__3We9N\",\"testPadding1\":\"IndiaByState_testPadding1__8CIfK\",\"colorRed\":\"IndiaByState_colorRed__1fACL\",\"colorGreen\":\"IndiaByState_colorGreen__26Gu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"customers\":\"Cards_customers__Kb_Bn\",\"MuiCardContent-root\":\"Cards_MuiCardContent-root__2u6Qq\",\"width-300\":\"Cards_width-300__1T_LM\",\"class1\":\"Cards_class1__HxjdV\",\"class2\":\"Cards_class2__3xuUV\",\"class3\":\"Cards_class3__3QEek\",\"formControl\":\"Cards_formControl__2oNdk\",\"flashColor\":\"Cards_flashColor__2Q0I5\",\"font8\":\"Cards_font8__2kfL7\",\"font11\":\"Cards_font11__2NcGR\",\"fontWeight\":\"Cards_fontWeight__2xj-i\",\"colorRed1\":\"Cards_colorRed1__2yc1_\",\"colorGreen1\":\"Cards_colorGreen1__2iriq\",\"testPadding\":\"Cards_testPadding__2kBvI\",\"testPadding1\":\"Cards_testPadding1__lLpyK\",\"colorRed\":\"Cards_colorRed__1Gk9Q\",\"colorGreen\":\"Cards_colorGreen__15wp3\"};"],"sourceRoot":""}