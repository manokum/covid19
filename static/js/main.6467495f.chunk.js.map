{"version":3,"sources":["App.module.css","components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","components/Cases/CasesByRate.jsx","components/IndiaState/IndiaByState.jsx","components/IndiaAllDistrict/IndiaAllDistrict.jsx","App.js","index.js","components/IndiaState/IndiaByState.module.css","components/IndiaAllDistrict/IndiaAllDistrict.module.css","components/Cases/Cases.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.jpg"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","indiaDailyValue","statewise","states","state","Chart","console","log","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Info","customers","flashColor","Date","toDateString","toLocaleTimeString","Number","toFixed","class3","class1","class2","CasesByRate","product","id","IndiaByState","React","firstName","setFirstName","lastName","setLastName","allStateData","setallStateData","fetch","then","results","json","window","result","allSt","Object","keys","accepted","type","indexOf","filterTypes","test","values","test1","districtData","test2","test3","entries","active","deceased","IndiaAllDistrict","datato","testlatlong","handleChange","event","handleSubmit","t","array","JSON","parse","stringify","replace","user","post","res","setState","this","length","district","districtZoneType","red","green","orange","Component","App","basename","image","src","alt","navcenter","role","navwrapper","to","exact","path","CountryPicker","Cards","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6467495f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"MuiCardContent-root\":\"App_MuiCardContent-root__VrPBm\",\"navcenter\":\"App_navcenter__bgi5A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"customers\":\"Cards_customers__Kb_Bn\",\"MuiCardContent-root\":\"Cards_MuiCardContent-root__2u6Qq\",\"width-300\":\"Cards_width-300__1T_LM\",\"class1\":\"Cards_class1__HxjdV\",\"class2\":\"Cards_class2__3xuUV\",\"class3\":\"Cards_class3__3QEek\",\"formControl\":\"Cards_formControl__2oNdk\",\"flashColor\":\"Cards_flashColor__2Q0I5\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\nconst url1 = 'https://api.covid19india.org/data.json';\nconst url2 = 'https://api.covid19india.org/state_district_wise.json';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const indiaDailyValue = async () => {\n  try{\n    const { data} = await axios.get(`${url1}`);\n\n    // return countries.map((country) => country.name);\n    return data.statewise.map(({ confirmed, deaths, recovered, state }) => ({ confirmed: confirmed, deaths: deaths, recovered : recovered,states : state}));\n  } catch(err){\n    return err;\n  }\n};\n\nexport const indiaStateValue = async () => {\n  try{\n    const { data} = await axios.get(`${url2}`);\n\n    return data;\n    //return data.statewise.map(({ confirmed, deaths, recovered, state }) => ({ confirmed: confirmed, deaths: deaths, recovered : recovered,states : state}));\n  } catch(err){\n    return err;\n  }\n};","import React, { useState, useEffect } from 'react';\nimport { Line, Polar, HorizontalBar,Bubble,Pie } from 'react-chartjs-2';\nimport { Doughnut,Scatter } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  console.log(\"Chart\",Chart)\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Pie\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'No of People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <HorizontalBar\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n  \n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n      \n  \n  return (\n    <div className={styles.container}>\n      {/* <Grid container spacing={3} justify=\"center\">\n      \n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={confirmed.value} duration={1} separator=\",\" />\n              \n            </Typography>\n           \n          \n            <Typography variant=\"body2\" component=\"p\">\n              No of active cases\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n            \n              Recovered : <span className={(Number(((recovered.value)/(confirmed.value)*100)).toFixed(0))  > 25 ? styles.class3 : styles.class1 }>{Number(((recovered.value)/(confirmed.value)*100)).toFixed(0) }%</span>\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={recovered.value} duration={1} separator=\",\" />\n            </Typography>\n            \n            <Typography>\n            \n            </Typography>\n            <Typography></Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              No.of recoveries made\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths : <span className={(Number(((deaths.value)/(confirmed.value)*100)).toFixed(0))  > 5 ? styles.class1 : styles.class2 }>{Number(((deaths.value)/(confirmed.value)*100)).toFixed(0) }%</span>\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={deaths.value} duration={1} separator=\",\" />\n            </Typography>\n           \n            <Typography variant=\"body2\" component=\"p\">\n              Number of deaths COVID19.   \n            </Typography>\n            <Typography>\n            \n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card)}>\n        <CardContent>\n        <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            </CardContent>\n        </Grid>\n        \n      </Grid> */}\n\n<table className={styles.customers}>\n<caption className = {styles.flashColor}>Last Updated : {new Date(lastUpdate).toDateString()} {new Date(lastUpdate).toLocaleTimeString()} </caption>\n      {/* <caption>{new Date(lastUpdate).toLocaleTimeString()}</caption> */}\n      <thead>\n        <tr>\n         <th>Confirmed</th>\n          <th>Recovered</th>\n          <th>Recovered Rate</th>\n          <th>Deaths</th>\n          <th>Deaths Rate</th>\n          \n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>{confirmed.value}</td>\n            <td>{recovered.value}</td>\n            <td><span className={(Number(((recovered.value)/(confirmed.value)*100)).toFixed(0))  > 25 ? styles.class3 : styles.class1 }>{Number(((recovered.value)/(confirmed.value)*100)).toFixed(0) }%</span></td>\n            <td>{deaths.value}</td>\n            <td><span className={(Number(((deaths.value)/(confirmed.value)*100)).toFixed(0))  > 5 ? styles.class1 : styles.class2 }>{Number(((deaths.value)/(confirmed.value)*100)).toFixed(0) }%</span></td>\n          </tr>\n    \n      </tbody>\n    </table> \n\n\n    </div>\n  );\n};\nexport default Info;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { Line, Polar, HorizontalBar,Bubble,Pie,Bar } from 'react-chartjs-2';\nimport { indiaDailyValue } from '../../api';\n\nimport styles from './Cases.module.css';\n\nconst CasesByRate = ({  data: { confirmed, deaths, recovered, states } }) => {\n  \n  const [state,setCountries] = useState([]);\n  console.log(\"data CasesByRate\",state)\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await indiaDailyValue());\n    };\n    fetchAPI();\n  }, []);\n\n  const options = {\n    scales: {\n         xAxes: [{\n             stacked: true\n         }],\n         yAxes: [{\n             stacked: true\n         }]\n     }\n }\n\n let data ={ \n   datasets:[{\n     label: 'Confirmed',\n       data: state.map((data) => data.confirmed),\n       backgroundColor: ['rgba(0, 0, 255, 0.5)'],\n     },\n     {\n       label: 'Deaths',\n       data: state.map((data) => data.deaths),\n       backgroundColor: ['rgba(0, 255, 0, 0.5)'],\n     },\n     {\n        label: 'Recovered',\n        data: state.map((data) => data.recovered),\n        backgroundColor: ['rgba(255, 0, 0, 0.5)'],\n      },\n    //   {\n    //     label: 'states',\n    //     data: state.map((data) => data.states),\n    //     backgroundColor: ['rgba(255, 0, 0, 0.5)'],\n    //   }\n    ],\n   labels:['India']\n }\n\n  const barChart = (\n    confirmed ? (\n      <Bar \n      data={data}\n       options={options}\n           \n            \n           \n        // }}\n        // data={{\n        //   labels: ['Infected', 'Recovered', 'Deaths','State'],\n        //   datasets: [\n        //     {\n        //       label: 'No of People',\n        //       backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        //       data: state.map((data) => data.confirmed),\n        //     },\n        //   ],\n        // }}\n        // options={{\n        //   legend: { display: false },\n        //   title: { display: true, text: `Current state in ${country}` },\n        // }}\n      />\n    ) : null\n  );\n\n  return (\n    // <FormControl className={styles.formControl}>\n    //   <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n    //     <option value=\"\">Global</option>\n    //     {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n    //   </NativeSelect>\n    // </FormControl> confirmed, deaths, recovered,\n    <div className={styles.container}>\n    { <table className={styles.customers}>\n      <caption>All States Data</caption>\n      <thead>\n        <tr>\n          <th>States</th>\n          <th>Confirmed</th>\n          <th>Deaths</th>\n          <th>Recovered</th>\n        </tr>\n      </thead>\n      <tbody>\n        {state.map(product => (\n          <tr key={product.id}>\n            <td>{product.states}</td>\n            <td>{product.confirmed}</td>\n            <td>{product.deaths}</td>\n            <td>{product.recovered}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table> }\n  </div>\n  );\n};\n\n\n\n\nexport default CasesByRate;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { Line, Polar, HorizontalBar,Bubble,Pie,Bar } from 'react-chartjs-2';\nimport { indiaStateValue } from '../../api';\n\nimport styles from './IndiaByState.module.css';\n\nconst IndiaByState = ({ data }) => {\n  \n  // const [state,setCountries] = useState([]);\n  // console.log(\"data IndiaByState\",[state])\n\n  \n  // useEffect(() => {\n  //   const fetchAPI = async () => {\n  //     setCountries(await indiaStateValue());\n  //   };\n  //   fetchAPI();\n  const [firstName, setFirstName] = React.useState(null);\n  const [lastName, setLastName] = React.useState(null);\n  const [allStateData, setallStateData] = React.useState(null);\n  \n  React.useEffect(() => {\n    fetch('https://api.covid19india.org/state_district_wise.json')\n      .then(results => results.json())\n      .then(data => {\n        console.log(\"data\",data)\n        window.data= data;\n         const [name] = [data];\n         function filterTypes(accepted) {\n      \n          for (var type in window.data)\n              if (accepted.indexOf(type) > -1) \n              window.result[type] = window.data[type];\n          console.log(\"result\", window.result);\n      }\n  \n      // console.log(\"const [name] = [data];\",[name])\n      window.result = {}  \n  \n  console.log(\"widnow Data\",window.data)\n  const allSt = Object.keys(window.data);\n  console.log(\"widnow allSt\",allSt)\n  setallStateData(allSt);\n  filterTypes(['Assam']);\n  console.log(\"window.result\",window.result)\n  const test  = Object.values(window.result);\n  console.log(\"window.result['key'].districtData\",test);\n  const test1 = test[0].districtData;\n  console.log(\"test1\",test1)\n  Object.keys(test1);\n  const test2 = Object.keys(test1);\n  const test3 = Object.entries(test1);\n  console.log(\"test2\",test2)\n  console.log(\"test3\",test3)\n     setFirstName(test3);\n     setLastName(test2);\n        \n      });\n\n\n\n  }, []);\n\n  // if(!state) {\n   \n  //   window.result = {};\n  //   function filterTypes(accepted) {\n      \n  //     for (var type in state)\n  //         if (accepted.indexOf(type) > -1) \n  //         window.result[type] = state[type];\n  //     console.log(\"result\", window.result);\n  // }\n  // filterTypes(['Maharashtra']);\n\n  // }\n  function handleCountryChange(e){\n    console.log(\"inside handleCountryChange\",e)\n    window.result = {};\n    for (var type in window.data)\n    if (e.indexOf(type) > -1) \n    window.result[type] = window.data[type];\n    console.log(\"widnow Data\",window.data)\n    const allSt = Object.keys(window.data);\n    console.log(\"widnow allSt\",allSt)\n    setallStateData(allSt);\n    //filterTypes(['Jharkhand']);\n    \n    console.log(\"window.result\",window.result)\n    const test  = Object.values(window.result);\n    console.log(\"window.result['key'].districtData\",test);\n    const test1 = test[0].districtData;\n    console.log(\"test1\",test1)\n    Object.keys(test1);\n    const test2 = Object.keys(test1);\n    const test3 = Object.entries(test1);\n    console.log(\"test2\",test2)\n    console.log(\"test3\",test3)\n       setFirstName(test3);\n       setLastName(test2);\n    \n  }\n  return (\n    <div className={styles.container}>\n      {!firstName || !lastName  || !allStateData ? 'Loading...' : \n       <div>\n        <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        {/* <option value=\"\">Assam</option> */}\n        {allStateData.map((product, i) => <option key={i} value={product}>{product}</option>)}\n      </NativeSelect>\n    </FormControl>\n     \n      <table className={styles.customers}>\n      <caption>All States Data</caption>\n      <thead>\n        <tr>\n         <th>District</th>\n          <th>Confirmed</th>\n          <th>Active</th>\n          <th>Deaths</th>\n          <th>Recovered</th>\n        </tr>\n      </thead>\n      <tbody>\n        {firstName.map((product,i) => (\n          <tr key={i}>\n            <td>{product[0]}</td>\n            <td className={(product[1].confirmed)  > 25 ? styles.class3 : styles.class1 }>{product[1].confirmed}</td>\n            <td>{product[1].active}</td>\n            <td>{product[1].deceased}</td>\n            <td>{product[1].recovered}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table> </div>}\n    </div>\n    \n\n  );\n};\n\n\n\n\nexport default IndiaByState;\n","import React from 'react';\nimport axios from 'axios';\nimport SelectSearch from 'react-select-search';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport styles from './IndiaAllDistrict.module.css';\n\nexport default class IndiaAllDistrict extends React.Component {\n  state = {\n    datato :[],\n    testlatlong: []\n  }\n  \n  handleChange = event => {\n    console.log(\"event\",event)\n    //const test = [event];\n    //console.log(\"test\",test)\n    //this.setState({ testlatlong: test });\n    this.handleSubmit(event);\n  }\n\n  handleSubmit = (t) => {\n    //event.preventDefault();\n    console.log(\"value of t\",t)\n    var array = JSON.parse(\"[[\" + t + \"]]\");\n    const string = JSON.stringify(t);\n    string.replace (/\"/g,''); \nconsole.log(\"inside submit string\",array)\n    const user = {\n      \"latlngs\":array,\n      \"key\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtYWlsSWRlbnRpdHkiOiJtYW5vcmFuamFua3VtQGdtYWlsLmNvbSJ9.65QsDiBeKvnUnswtFjmfTEUrUt6tiaPZ92_1jvQMsCo\"\n    };\n\n    axios.post(`https://data.geoiq.io/dataapis/v1.0/covid/locationcheck`,  user )\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n       //this.state.datato = res.data;\n       this.setState({\n        datato: res.data\n      });\n      })\n      console.log(\"this.state.datato\",this.state.datato)\n  }\n\n\n\n  render() {\n    const options = [\n      {name: 'Bangalore', value: [[12.959743999999999,77.6470528]]},\n      {name: 'Mumbai', value: [[19.0760 ,72.8777]]}, \n      {name: 'Dhanbad', value: [[23.80039349,86.41998572]]},\n      {name: 'Jamshedpur', value: [[22.78753542\t ,86.19751868]]},\n      {name: 'Ranchi', value: [[23.37000633,85.33002641]]},\n      {name: 'Bokaro', value: [[ 23.6693,86.1511]]},\n      {name: 'Pune', value: [[ 18.5204,73.8567]]},\n      {name: ' Andaman And Nicobar', value: [[ 11.66702557,92.73598262]]},\n      {name: 'Andhra Pradesh', value: [[ 14.7504291,78.57002559]]},\n  \n  \n      {name: 'Arunachal Pradesh', value: [[27.10039878,93.61660071]]},\n      {name: 'Assam', value: [[26.7499809,94.21666744]]}, \n      {name: 'Bihar', value: [[25.78541445,87.4799727]]},\n      {name: 'Delhi', value: [[28.6699929,77.23000403]]},\n      {name: 'Kerala', value: [[8.900372741,76.56999263]]},\n      {name: 'Bokaro', value: [[ 23.6693,86.1511]]},\n      {name: 'Pune', value: [[ 18.5204,73.8567]]},\n      {name: ' Andaman And Nicobar', value: [[ 11.66702557,92.73598262]]},\n      {name: 'Andhra Pradesh', value: [[ 14.7504291,78.57002559]]},\n      \n      \n      \n       \n      // Chandigarh (1)\t30.71999697\t76.78000565\n      // Chhattisgarh (3)\t22.09042035\t82.15998734\n      // Dadra And Nagar Haveli (12)\t20.26657819\t73.0166178\n     \n      // Goa (1)\t15.491997\t73.81800065\n      // Haryana (10)\t28.45000633\t77.01999101\n      // Himachal Pradesh (2)\t31.10002545\t77.16659704\n      // Jammu And Kashmir (4)\t34.29995933\t74.46665849\n      // Jharkhand (3)\t23.80039349\t86.41998572\n      // Karnataka (16)\t12.57038129\t76.91999711\n       \n      // Lakshadweep (1)\t10.56257331\t72.63686717\n      // Madhya Pradesh (8)\t21.30039105\t76.13001949\n      // Maharashtra (20)\t19.25023195\t73.16017493\n      // Manipur (1)\t24.79997072\t93.95001705\n      // Meghalaya (1)\t25.57049217\t91.8800142\n      // Mizoram (1)\t23.71039899\t92.72001461\n      // Nagaland (1)\t25.6669979\t94.11657019\n      // Orissa (6)\t19.82042971\t85.90001746\n      // Puducherry (1)\t11.93499371\t79.83000037\n      // Punjab (6)\t31.51997398\t75.98000281\n      // Rajasthan (12)\t26.44999921\t74.63998124\n      // Sikkim (1)\t27.3333303\t88.6166475\n      // Tamil Nadu (19)\t12.92038576\t79.15004187\n      // Tripura (1)\t23.83540428\t91.27999914\n      // Uttar Pradesh (29)\t27.59998069\t78.05000565\n      // Uttaranchal (1)\t30.32040895\t78.05000565\n      // West Bengal (10)\t22.58039044\t88.32994665\t\n  ];\n    return (\n      <div>\n        {/* <form onSubmit={this.handleSubmit}>\n          <label>\n            Name:\n            <input type=\"text\" name=\"name\" onChange={this.handleChange} />\n          </label>\n          <button type=\"submit\">Search</button>\n        </form> */}\n        {/* <SelectSearch options={options} defaultValue=\"sv\" name=\"language\" placeholder=\"Choose your language\" /> */}\n\n        <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\"  onChange={(e) => this.handleChange(e.target.value)} >\n        <option value=\"\">Select State/District</option>\n        {options.map((country, i) => <option key={i} value={country.value}>{country.name}</option>) }\n      </NativeSelect>\n    </FormControl>\n    {/* <Autocomplete\n      id=\"combo-box-demo\"\n      options={options}\n      getOptionLabel={(option) => option.name}\n      style={{ width: 300 }}\n      renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\n    /> */}\n        { this.state.datato.length != 0  ? <table className={styles.customers}>\n      <caption>Zone Data</caption>\n      <thead>\n        <tr>\n         <th>Zone </th>\n          <th>Zone Type</th>\n          \n        </tr>\n      </thead>\n      <tbody>\n        {this.state.datato.data.map((product,i) => (\n          <tr>\n            <td>{product.district}</td>\n            <td className={product.districtZoneType.length === 8 ? styles.red : product.districtZoneType.length === 10 ? styles.green : styles.orange }>{product.districtZoneType}</td>\n          </tr>\n        ))}\n        {/* <tr><td>{this.state.datato.data[0].containmentsAvailability}</td></tr> */}\n      </tbody>\n        </table> : <p>Please enter state name to see data</p>}\n\n      </div>\n    )\n  }\n}","import React from 'react';\n\nimport { Cards, CountryPicker, Chart,CasesByRate,IndiaByState,IndiaAllDistrict } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\nimport image from './images/image.jpg';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter,\n  Link\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <HashRouter basename='/'>\n      {/* <Router> */}\n      <div className={styles.container}>\n        {/* <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">Users</Link>\n            </li>\n          </ul>\n        </nav> */}\n\n<img className={styles.image} src={image} alt=\"COVID-19\" />\n<nav className={styles.navcenter} role=\"navigation\">\n    <div className={styles.navwrapper}>\n    <ul>\n            <li>\n              <Link to=\"/\">Indian State Data</Link>\n            </li>\n            <li>\n              <Link to=\"/world\">World Statistics</Link>\n            </li>\n            <li>\n              <Link to=\"/india\">India All State</Link>\n            </li>\n            <li>\n              <Link to=\"/zonedata\">India Zone Data</Link>\n            </li>\n          </ul>\n    </div>\n</nav>\n\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n        <Route exact path=\"/\">\n          <div className={styles.container}>\n          {/* <img className={styles.image} src={image} alt=\"COVID-19\" /> */}\n        \n          <IndiaByState/>\n          <IndiaAllDistrict/>\n          {/* <CasesByRate data={data} /> */}\n          </div>\n          </Route>\n          <Route exact path=\"/world\">\n          <div className={styles.container}>\n          \n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n         <Chart data={data} country={country} /> \n         <Cards data={data} />\n         </div>\n          </Route>\n          <Route exact path=\"/india\">\n          <div className={styles.container}>\n          <CasesByRate data={data} />\n          </div>\n          </Route>\n          <Route exact path=\"/zonedata\">\n          <div className={styles.container}>\n          <IndiaAllDistrict/>\n          </div>\n          </Route>\n         \n        </Switch>\n      </div>\n    {/* </Router> */}\n      {/* // <div className={styles.container}>\n      //   <img className={styles.image} src={image} alt=\"COVID-19\" />\n      //   <CountryPicker handleCountryChange={this.handleCountryChange} />\n      //   <Chart data={data} country={country} /> \n      //   <Cards data={data} />\n      //   <CasesByRate data={data} /> */}\n     \n     </HashRouter>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IndiaByState_container__3gYJP\",\"customers\":\"IndiaByState_customers__rdqWe\",\"class1\":\"IndiaByState_class1__3Q5gh\",\"class3\":\"IndiaByState_class3__2gSmu\",\"formControl\":\"IndiaByState_formControl__3XmAD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IndiaAllDistrict_container__2_Fgs\",\"customers\":\"IndiaAllDistrict_customers__3lRIm\",\"class1\":\"IndiaAllDistrict_class1__Brph_\",\"class3\":\"IndiaAllDistrict_class3__2x5_h\",\"formControl\":\"IndiaAllDistrict_formControl__1UMJQ\",\"green\":\"IndiaAllDistrict_green__PjCPt\",\"red\":\"IndiaAllDistrict_red__3BJ7v\",\"orange\":\"IndiaAllDistrict_orange__2oJAT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cases_container__Dk1Kb\",\"customers\":\"Cases_customers__vXvDs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.2ce01c11.jpg\";"],"sourceRoot":""}