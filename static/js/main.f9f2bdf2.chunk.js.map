{"version":3,"sources":["components/Cards/Cards.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css","images/image.jpg","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","components/Cases/CasesByRate.jsx","components/IndiaState/IndiaByState.jsx","components/IndiaAllDistrict/IndiaAllDistrict.jsx","App.js","index.js","components/IndiaAllDistrict/IndiaAllDistrict.module.css","components/Cases/Cases.module.css","components/IndiaState/IndiaByState.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","fetchZones","zones","district","state","zone","statecode","lastupdated","indiaDailyValue","statewise","active","deltaconfirmed","lastupdatedtime","deltadeaths","deltarecovered","states","Chart","console","log","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","lineChart","pop","borderColor","borderWidth","title","text","fontSize","position","maintainAspectRatio","scales","yAxes","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Info","flashColor","Date","toDateString","toLocaleTimeString","TableContainer","component","Paper","Table","customers","aria-label","TableHead","fontWeight","TableRow","TableCell","testPadding","colorRed1","colorGreen1","testPadding1","TableBody","scope","colorRed","colorGreen","Number","toFixed","font8","CasesByRate","row","visiblehide","arrowCss","icons","arrowN","IndiaByState","React","firstName","setFirstName","lastName","setLastName","allStateData","setallStateData","fetch","then","results","json","window","result","allSt","Object","keys","accepted","type","indexOf","filterTypes","test","values","test1","districtData","test2","test3","entries","product","reduce","totalCalories","visibilityhidden","deceased","delta","IndiaAllDistrict","App","setState","this","basename","image","src","alt","navcenter","role","navbar","navwrapper","exact","activeClassName","navbar__link__active","navbar__link","to","removeborder","globe","castle","homes","path","CountryPicker","Cards","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9f2bdf2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"customers\":\"Cards_customers__Kb_Bn\",\"MuiCardContent-root\":\"Cards_MuiCardContent-root__2u6Qq\",\"width-300\":\"Cards_width-300__1T_LM\",\"class1\":\"Cards_class1__HxjdV\",\"class2\":\"Cards_class2__3xuUV\",\"class3\":\"Cards_class3__3QEek\",\"formControl\":\"Cards_formControl__2oNdk\",\"flashColor\":\"Cards_flashColor__2Q0I5\",\"font8\":\"Cards_font8__2kfL7\",\"font11\":\"Cards_font11__2NcGR\",\"fontWeight\":\"Cards_fontWeight__2xj-i\",\"colorRed1\":\"Cards_colorRed1__2yc1_\",\"colorGreen1\":\"Cards_colorGreen1__2iriq\",\"testPadding\":\"Cards_testPadding__2kBvI\",\"testPadding1\":\"Cards_testPadding1__lLpyK\",\"colorRed\":\"Cards_colorRed__1Gk9Q\",\"colorGreen\":\"Cards_colorGreen__15wp3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"image1\":\"App_image1__2PO85\",\"MuiCardContent-root\":\"App_MuiCardContent-root__VrPBm\",\"navcenter\":\"App_navcenter__bgi5A\",\"navbar\":\"App_navbar__3gDlA\",\"navbar__link\":\"App_navbar__link__2gPI6\",\"navbar__link__active\":\"App_navbar__link__active__F5ujP\",\"removeborder\":\"App_removeborder__3eSW8\"};","module.exports = __webpack_public_path__ + \"static/media/image.2ce01c11.jpg\";","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\nconst url1 = 'https://api.covid19india.org/data.json';\nconst url2 = 'https://api.covid19india.org/state_district_wise.json';\nconst url3= 'https://newsapi.org/v2/top-headlines?country=in&apiKey=ac385d82856b4df09ca19e740e16eac3';\nconst urlZones = 'https://api.covid19india.org/zones.json'\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\nexport const fetchZones = async () => {\n  try {\n    const { data } = await axios.get(`${urlZones}`);\n\n    return data.zones.map(({ district, state, zone,lastupdated:statecode}) => ({district:district,state:state,zone:zone,statecode }));\n  } catch (error) {\n    return error;\n  }\n};\n//district,state,zone \nexport const indiaDailyValue = async () => {\n  try{\n    const { data} = await axios.get(`${url1}`);\n\n    // return countries.map((country) => country.name);\n    return data.statewise.map(({ confirmed,active,deltaconfirmed, deaths, recovered, state ,lastupdatedtime,deltadeaths,deltarecovered}) => ({deltarecovered:deltarecovered,deltadeaths:deltadeaths, deltaconfirmed:deltaconfirmed,confirmed: confirmed,active:active, deaths: deaths, recovered : recovered,states : state ,lastupdatedtime: lastupdatedtime}));\n  } catch(err){\n    return err;\n  }\n};\n\nexport const indiaStateValue = async () => {\n  try{\n    const { data} = await axios.get(`${url2}`);\n\n    return data;\n    //return data.statewise.map(({ confirmed, deaths, recovered, state }) => ({ confirmed: confirmed, deaths: deaths, recovered : recovered,states : state}));\n  } catch(err){\n    return err;\n  }\n};\n\nexport const fetchNewsData = async () => {\n  try {\n    const { data } = await axios.get(`${url3}`);\n\n    return data.articles;\n  } catch (error) {\n    return error;\n  }\n};","import React, { useState, useEffect } from 'react';\nimport { Line, Polar, HorizontalBar,Bubble,Pie,Bar } from 'react-chartjs-2';\nimport { Doughnut,Scatter } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  console.log(\"Chart\",Chart)\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Pie\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'No of People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n         // title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    \n    dailyData[0] ? (\n      \n      <Bar\n      data={{\n        labels: [[...dailyData].pop().date],\n        datasets: [\n          {\n            label: 'Confirmed',\n            backgroundColor: 'rgba(0, 0, 255, 0.5)',\n            borderColor: 'rgba(0, 0, 255, 0.5)',\n            borderWidth: 2,\n            data: [[...dailyData].pop().confirmed]\n          },\n          {\n            label: 'Deaths',\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\n            borderColor: 'rgba(0, 255, 0, 0.5)',\n            borderWidth: 2,\n            data: [[...dailyData].pop().deaths]\n          }\n        ]\n      }}\n      options={{\n        title:{\n          display:false,\n          text:'World Data',\n          fontSize:10\n        },\n        legend:{\n          display:true,\n          position:'bottom'\n        },\n         maintainAspectRatio: false ,\n        scales: {\n          yAxes: [{\n              //  gridLines: {\n              //     display: false,\n              // },\n              display : false\n          }]\n     }\n      }\n    }\n      />\n      // <Line\n      // data={{\n      //   labels: dailyData.map(({ date }) => date),\n      //   datasets: [{\n      //     data: dailyData.map((data) => data.confirmed),\n      //     label: 'Infected',\n      //     borderColor: '#3333ff',\n      //     fill: true,\n      //   }, {\n      //     data: dailyData.map((data) => data.deaths),\n      //     label: 'Deaths',\n      //     borderColor: 'red',\n      //     backgroundColor: 'rgba(255, 0, 0, 0.5)',\n      //     fill: true,\n      //   },\n      //   ],\n      // }}\n    ///>\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n  \n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">World</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n      \n  \n  return (\n    <div className={styles.container}>\n      {/* <Grid container spacing={3} justify=\"center\">\n      \n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={confirmed.value} duration={1} separator=\",\" />\n              \n            </Typography>\n           \n          \n            <Typography variant=\"body2\" component=\"p\">\n              No of active cases\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n            \n              Recovered : <span className={(Number(((recovered.value)/(confirmed.value)*100)).toFixed(0))  > 25 ? styles.class3 : styles.class1 }>{Number(((recovered.value)/(confirmed.value)*100)).toFixed(0) }%</span>\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={recovered.value} duration={1} separator=\",\" />\n            </Typography>\n            \n            <Typography>\n            \n            </Typography>\n            <Typography></Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              No.of recoveries made\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths : <span className={(Number(((deaths.value)/(confirmed.value)*100)).toFixed(0))  > 5 ? styles.class1 : styles.class2 }>{Number(((deaths.value)/(confirmed.value)*100)).toFixed(0) }%</span>\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={deaths.value} duration={1} separator=\",\" />\n            </Typography>\n           \n            <Typography variant=\"body2\" component=\"p\">\n              Number of deaths COVID19.   \n            </Typography>\n            <Typography>\n            \n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card)}>\n        <CardContent>\n        <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            </CardContent>\n        </Grid>\n        \n      </Grid> */}\n\n{/* <table className={styles.customers}>\n<caption className = {styles.flashColor}>Last Updated : {new Date(lastUpdate).toDateString()} {new Date(lastUpdate).toLocaleTimeString()} </caption>\n   \n      <thead>\n        <tr>\n         <th>Confirmed</th>\n          <th>Recovered</th>\n          <th>Recovered Rate</th>\n          <th>Deaths</th>\n          <th>Deaths Rate</th>\n          \n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>{confirmed.value}</td>\n            <td>{recovered.value}</td>\n            <td><span className={(Number(((recovered.value)/(confirmed.value)*100)).toFixed(0))> 25 ? styles.class3 : styles.class1 }>{Number(((recovered.value)/(confirmed.value)*100)).toFixed(0) }%</span></td>\n            <td>{deaths.value}</td>\n            <td><span className={(Number(((deaths.value)/(confirmed.value)*100)).toFixed(0))  > 5 ? styles.class1 : styles.class2 }>{Number(((deaths.value)/(confirmed.value)*100)).toFixed(0) }%</span></td>\n          </tr>  \n    \n      </tbody>\n    </table>  */}\n<caption className = {styles.flashColor}>Last Updated : {new Date(lastUpdate).toDateString()} {new Date(lastUpdate).toLocaleTimeString()} </caption>\n<TableContainer component={Paper}>\n      <Table className={styles.customers} aria-label=\"simple table\">\n        <TableHead className={styles.fontWeight}>\n          <TableRow>\n            <TableCell className={styles.fontWeight}>Confirmed</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorRed1}>Recovered</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorGreen1}>R Rate.</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding1}>Deaths</TableCell>\n            <TableCell className={styles.fontWeight} className={styles.testPadding1}>D Rate.</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          \n            <TableRow >\n              <TableCell component=\"th\" scope=\"row\" className={styles.fontWeight} className={styles.testPadding1}>\n              {confirmed.value}\n              </TableCell>\n              <TableCell  className={styles.colorRed} className={styles.colorRed}>{recovered.value}</TableCell>\n              <TableCell  className={styles.colorGreen} className={styles.colorGreen}>{Number(((recovered.value)/(confirmed.value)*100)).toFixed(0) }%</TableCell>\n              <TableCell   className={styles.testPadding}>{deaths.value}</TableCell>\n              <TableCell  className={styles.font8}>{Number(((deaths.value)/(confirmed.value)*100)).toFixed(0) }%</TableCell>\n              \n            </TableRow>\n       \n        </TableBody>\n      </Table>\n    </TableContainer>\n    </div>\n  );\n};\nexport default Info;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { Line, Polar, HorizontalBar,Bubble,Pie,Bar } from 'react-chartjs-2';\nimport { indiaDailyValue } from '../../api';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport icons from 'glyphicons'  \nimport styles from './Cases.module.css';\n\nconst CasesByRate = ({  data: {  confirmed,active,deltaconfirmed, deaths, recovered, states ,lastupdatedtime,deltadeaths,deltarecovered } }) => {\n  \n  const [state,setCountries] = useState([]);\n  console.log(\"data CasesByRate\",state)\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await indiaDailyValue());\n    };\n    fetchAPI();\n  }, []);\n\n\n\n\n\n  return (\n  \n    <div className={styles.container}>\n \n\n<TableContainer component={Paper}>\n      <Table className={styles.customers} aria-label=\"simple table\">\n        <TableHead className={styles.fontWeight}>\n          <TableRow>\n            <TableCell className={styles.fontWeight}>States</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorRed1}>Confirmed</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding1}>Active</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorGreen1}>Recovered</TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding1}>Deaths</TableCell>\n            {/* <TableCell className={styles.fontWeight} className={styles.testPadding1}>Last Updated</TableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {state.map((row,i) => (\n            <TableRow key={i}>\n              <TableCell component=\"th\" scope=\"row\" className={styles.fontWeight} className={styles.testPadding1}>\n                {row.states}\n                <div className={styles.font8}>{row.lastupdatedtime}</div>\n              </TableCell>\n              <TableCell  className={styles.colorRed} className={styles.colorRed}><div>{row.confirmed}</div><div className={styles.visiblehide}>gg</div><div>{row.deltaconfirmed}<span className={styles.arrowCss}>{icons.arrowN}</span></div></TableCell>\n              <TableCell  className={styles.colorRed} className={styles.colorRed}><div>{row.active}</div><div>{Number(((row.active)/(row.confirmed)*100)).toFixed(0)  }%</div><div className={styles.visiblehide}>gg</div></TableCell>\n          <TableCell  className={styles.colorGreen} className={styles.colorGreen}><div>{row.recovered}</div><div>{Number(((row.recovered)/(row.confirmed)*100)).toFixed(0)  }%</div><div>{row.deltarecovered}<span className={styles.arrowCss}>{icons.arrowN}</span></div></TableCell>\n          <TableCell   className={styles.testPadding}><div>{row.deaths} </div><div>{Number(((row.deaths)/(row.confirmed)*100)).toFixed(0)  }%</div><div>{row.deltadeaths}<span className={styles.arrowCss}>{icons.arrowN}</span></div></TableCell>\n              {/* <TableCell  className={styles.font8}>{row.lastupdatedtime}</TableCell> */}\n              \n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n\n  </div>\n  );\n};\n\n\n\n\nexport default CasesByRate;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { Line, Polar, HorizontalBar,Bubble,Pie,Bar } from 'react-chartjs-2';\nimport { indiaStateValue } from '../../api';\nimport icons from 'glyphicons'  \n// import _ from 'underscore'  \nimport styles from './IndiaByState.module.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst IndiaByState = ({ data }) => {\n  \n  // const [state,setCountries] = useState([]);\n  // console.log(\"data IndiaByState\",[state])\n\n  \n  // useEffect(() => {\n  //   const fetchAPI = async () => {\n  //     setCountries(await indiaStateValue());\n  //   };\n  //   fetchAPI();\n  const [firstName, setFirstName] = React.useState(null);\n  const [lastName, setLastName] = React.useState(null);\n  const [allStateData, setallStateData] = React.useState(null);\n  \n  React.useEffect(() => {\n    fetch('https://api.covid19india.org/state_district_wise.json')\n      .then(results => results.json())\n      .then(data => {\n        console.log(\"data\",data)\n        window.data= data;\n         const [name] = [data];\n         function filterTypes(accepted) {\n      \n          for (var type in window.data)\n              if (accepted.indexOf(type) > -1) \n              window.result[type] = window.data[type];\n          console.log(\"result\", window.result);\n      }\n  \n      // console.log(\"const [name] = [data];\",[name])\n      window.result = {}  \n  \n  console.log(\"widnow Data\",window.data)\n  const allSt = Object.keys(window.data);\n  console.log(\"widnow allSt\",allSt)\n  setallStateData(allSt);\n  filterTypes(['Andaman and Nicobar Islands']);\n  console.log(\"window.result\",window.result)\n  const test  = Object.values(window.result);\n  console.log(\"window.result['key'].districtData\",test);\n  const test1 = test[0].districtData;\n  console.log(\"test1\",test1)\n  Object.keys(test1);\n  const test2 = Object.keys(test1);\n  const test3 = Object.entries(test1);\n  console.log(\"test2\",test2)\n  console.log(\"test3\",test3)\n     setFirstName(test3);\n     setLastName(test2);\n        \n      });\n\n\n\n  }, []);\n\n  // if(!state) {\n   \n  //   window.result = {};\n  //   function filterTypes(accepted) {\n      \n  //     for (var type in state)\n  //         if (accepted.indexOf(type) > -1) \n  //         window.result[type] = state[type];\n  //     console.log(\"result\", window.result);\n  // }\n  // filterTypes(['Maharashtra']);\n\n  // }\n  function handleCountryChange(e){\n    console.log(\"inside handleCountryChange\",e)\n    window.result = {};\n    for (var type in window.data)\n    if (e.indexOf(type) > -1) \n    window.result[type] = window.data[type];\n    console.log(\"widnow Data\",window.data)\n    const allSt = Object.keys(window.data);\n    console.log(\"widnow allSt\",allSt)\n    setallStateData(allSt);\n    //filterTypes(['Jharkhand']);\n    \n    console.log(\"window.result\",window.result)\n    const test  = Object.values(window.result);\n    console.log(\"window.result['key'].districtData\",test);\n    const test1 = test[0].districtData;\n    console.log(\"test1\",test1)\n    Object.keys(test1);\n    const test2 = Object.keys(test1);\n    const test3 = Object.entries(test1);\n    console.log(\"test2\",test2)\n    console.log(\"test3\",test3)\n       setFirstName(test3);\n       setLastName(test2);\n    \n  }\n  return (\n    <div className={styles.container}>\n      {!firstName || !lastName  || !allStateData ? 'Loading...' : \n       <div>\n        <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        {/* <option value=\"\">Assam</option> */}\n        {allStateData.map((product, i) => <option key={i} value={product}>{product}</option>)}\n      </NativeSelect>\n    </FormControl>\n     \n      {/* <table className={styles.customers}>\n      <caption>All States Data</caption>\n      <thead>\n        <tr>\n         <th>District</th>\n          <th>Confirmed</th>\n          <th>Active</th>\n          <th>Deaths</th>\n          <th>Recovered</th>\n          \n        </tr>\n      </thead>\n      <tbody>\n        {firstName.map((product,i) => (\n          <tr key={i}>\n            <td className={styles.tdBreak}>{product[0]}</td>\n            <td className={(product[1].confirmed)  > 25 ? styles.class3 : styles.class1 }><div>{product[1].confirmed}  </div><div>{product[1].delta.confirmed}<span className={styles.arrowCss}>{icons.arrowN}</span></div></td>\n            <td>{product[1].active}</td>\n            <td><div>{product[1].deceased}</div> <div>{product[1].delta.deceased}<span className={styles.arrowCss}>{icons.arrowN}</span></div></td>\n            <td><div>{product[1].recovered}</div><div>{product[1].delta.recovered}<span className={styles.arrowCss}>{icons.arrowN}</span></div></td>\n            \n          </tr>\n        ))}\n      </tbody>\n    </table>  */}\n   \n    \n    \n    \n    <TableContainer component={Paper}>\n      <Table className={styles.customers} aria-label=\"simple table\">\n        <TableHead className={styles.fontWeight}>\n          <TableRow>\n            <TableCell className={styles.fontWeight}><div>District</div><div>Total</div>Rate<div></div></TableCell>\n            {/* <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorRed1}><div>Confirm</div><div>{firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].confirmed, 0)}</div><div><p className={styles.hidden}>T</p></div></TableCell> */}\n  <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorRed1}><div>Confirmed</div><div>{firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].confirmed, 0)}</div><div className={styles.visibilityhidden}>-</div></TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorGreen1}><div>Active</div><div>{firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].active, 0)}</div><div>{Number(((firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].active, 0)/(firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].confirmed, 0)))*100)).toFixed(0)  }%</div></TableCell>\n            <TableCell  className={styles.fontWeight} className={styles.testPadding1}><div>Deaths</div><div>{firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].deceased, 0)}</div><div>{Number(((firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].deceased, 0)/(firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].confirmed, 0)))*100)).toFixed(0)  }%</div></TableCell>\n            <TableCell className={styles.fontWeight} className={styles.testPadding1}><div>Recovered</div><div>{firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].recovered, 0)}</div><div>{Number(((firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].recovered, 0)/(firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].confirmed, 0)))*100)).toFixed(0)  }%</div></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {/* <span>{_.firstName(_.map(product, confirmed => confirmed.total))}</span> */}\n          {firstName.map((product,i) => (\n            <TableRow key={i}>\n              <TableCell component=\"th\" scope=\"row\" className={styles.fontWeight} className={styles.testPadding1}>\n              {product[0]}\n              </TableCell>\n              <TableCell  className={styles.colorRed} className={styles.colorRed}><div>{product[1].confirmed}  </div><div>{product[1].delta.confirmed}<span className={styles.arrowCss}>{icons.arrowN}</span></div></TableCell>\n              <TableCell  className={styles.colorGreen} className={styles.colorGreen}>{product[1].active}</TableCell>\n              <TableCell   className={styles.testPadding}><div>{product[1].deceased}</div> <div>{product[1].delta.deceased}<span className={styles.arrowCss}>{icons.arrowN}</span></div></TableCell>\n              <TableCell  className={styles.font8}><div>{product[1].recovered}</div><div>{product[1].delta.recovered}<span className={styles.arrowCss}>{icons.arrowN}</span></div></TableCell>\n              \n            </TableRow>\n          ))}\n          \n          {/* {_.sum(_.map(firstName, product => product[1].total))} \n          const meals = [\n  { calorie: 10},\n  { calorie: 15},\n  { calorie: 20}\n];\n\nconst calorieTotal = meals.reduce((totalCalories, meal) => totalCalories + meal.calorie, 0);\n\nconsole.log(calorieTotal);\n          */}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    \n    </div>}\n    </div>\n    \n\n  );\n};\n\n\n\n\nexport default IndiaByState;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { Line, Polar, HorizontalBar,Bubble,Pie,Bar } from 'react-chartjs-2';\nimport { indiaStateValue } from '../../api';\nimport icons from 'glyphicons'  \nimport styles from './IndiaAllDistrict.module.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { fetchZones } from '../../api';\n\n\nconst IndiaAllDistrict = ({  data:  district,state,zone }) => {\n    \n  const [dailyData, setDailyData] = useState([]);\n  console.log(\"data dailyData : ddistrict\",dailyData)\n  // useEffect(() => {\n  //   const fetchMyAPI = async () => {\n  //     //const initialDailyData = await fetchZones();\n  //     //setCountries(await indiaDailyValue());\n  //     setDailyData(await fetchZones );\n  //   };\n\n  //   fetchMyAPI();\n  // }, []);\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchZones();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  return (\n    <div className={styles.container}>\n     \n     \n\n         \n      \n  {!dailyData[0] ? 'Loading' : <div>\n{   \n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead className={styles.fontWeight}>\n          <TableRow>\n            <TableCell className={styles.fontWeight}>State</TableCell>\n           \n  <TableCell className={styles.fontWeight}>District</TableCell>\n            <TableCell className={styles.fontWeight}>Zone</TableCell>\n            \n           \n          </TableRow>\n        </TableHead>\n        <TableBody>\n        \n          {dailyData.map((product,i) => (\n            <TableRow key={i}>\n              <TableCell component=\"th\" scope=\"row\">\n              {product.state}\n              </TableCell>\n          <TableCell>{product.district}</TableCell>\n          <TableCell><span>{product.zone}</span></TableCell>\n       \n          \n              \n            </TableRow>\n          ))}\n          \n      \n        \n        </TableBody>\n      </Table>\n    </TableContainer> }\n    \n   \n  \n    </div>\n \n}\n</div>\n  );\n};\n\n\n\n\nexport default IndiaAllDistrict;\n\n\n\n\n\n","import React from 'react';\n\nimport { Cards, CountryPicker, Chart,CasesByRate,IndiaByState,IndiaAllDistrict,AllNews } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\nimport { NavLink } from 'react-router-dom';\nimport image from './images/image.jpg';\nimport icons from 'glyphicons'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter,\n  Link\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <HashRouter basename='/'>\n      {/* <Router> */}\n      <div className={styles.container}>\n       \n\n<img className={styles.image} src={image} alt=\"COVID-19\" />\n<nav className={styles.navcenter} role=\"navigation\" className={styles.navbar} >\n    {/* <div className={styles.navwrapper}>\n    <ul>\n            <li>\n              <Link to=\"/\">Indian State Data</Link>\n            </li>\n            <li>\n              <Link to=\"/world\">World Statistics</Link>\n            </li>\n            <li>\n              <Link to=\"/india\">India All State</Link>\n            </li>\n            <li>\n              <Link to=\"/zonedata\">India Zone Data</Link>\n            </li>\n          </ul>\n    </div> */}\n    <div className={styles.navwrapper}>\n    <NavLink\n      exact\n      activeClassName={styles.navbar__link__active}\n      className={styles.navbar__link}\n      to=\"/\"\n    >\n      {/* <img\n    src=\"./images/image.jpg\"\n    alt=\"Unactive Link Image\"\n    height=\"45\"\n    width=\"45\" \n  /> */} \n  <span className={styles.removeborder}>{icons.globe}</span>\n      World\n    </NavLink>\n    <NavLink\n      activeClassName={styles.navbar__link__active}\n      className={styles.navbar__link}\n      to=\"/indiaall\"\n    >  <span className={styles.removeborder}>{icons.castle}</span>\n      India\n    </NavLink>\n    <NavLink\n      activeClassName={styles.navbar__link__active}\n      className={styles.navbar__link}\n      to=\"/india\"\n    ><span className={styles.removeborder}>{icons.map}</span>\n      State\n    </NavLink>\n    <NavLink\n      activeClassName={styles.navbar__link__active}\n      className={styles.navbar__link}\n      to=\"/zonedata\"\n    ><span className={styles.removeborder}>{icons.homes}</span>\n      Zone\n    </NavLink>\n    </div>\n</nav>\n\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n        <Route exact path=\"/\">\n          <div className={styles.container}>\n          {/* <img className={styles.image} src={image} alt=\"COVID-19\" /> */}\n        \n          <div className={styles.container}>\n          \n          <CountryPicker handleCountryChange={this.handleCountryChange} />\n           <Chart data={data} country={country} /> \n           <Cards data={data} />\n          {/* < AllNews/> */}\n           </div>\n          {/* <IndiaAllDistrict/> */}\n          {/* <CasesByRate data={data} /> */}\n          </div>\n          </Route>\n          <Route exact path=\"/indiaall\">\n          <div className={styles.container}>\n          <CasesByRate data={data} />\n          </div>\n          \n          </Route>\n          <Route exact path=\"/india\">\n          <IndiaByState/>\n          </Route>\n          <Route exact path=\"/zonedata\">\n          <div className={styles.container}>\n          <IndiaAllDistrict/>\n          </div>\n          </Route>\n         \n        </Switch>\n      </div>\n    {/* </Router> */}\n      {/* // <div className={styles.container}>\n      //   <img className={styles.image} src={image} alt=\"COVID-19\" />\n      //   <CountryPicker handleCountryChange={this.handleCountryChange} />\n      //   <Chart data={data} country={country} /> \n      //   <Cards data={data} />\n      //   <CasesByRate data={data} /> */}\n     \n     </HashRouter>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IndiaAllDistrict_container__2_Fgs\",\"customers\":\"IndiaAllDistrict_customers__3lRIm\",\"class1\":\"IndiaAllDistrict_class1__Brph_\",\"class3\":\"IndiaAllDistrict_class3__2x5_h\",\"formControl\":\"IndiaAllDistrict_formControl__1UMJQ\",\"arrowCss\":\"IndiaAllDistrict_arrowCss__2NBpI\",\"font8\":\"IndiaAllDistrict_font8__3N7Cl\",\"font11\":\"IndiaAllDistrict_font11__3Y3_j\",\"fontWeight\":\"IndiaAllDistrict_fontWeight__w1gh-\",\"colorRed1\":\"IndiaAllDistrict_colorRed1__1UKua\",\"colorGreen1\":\"IndiaAllDistrict_colorGreen1__78DxU\",\"testPadding\":\"IndiaAllDistrict_testPadding__qN4_9\",\"testPadding1\":\"IndiaAllDistrict_testPadding1__38e4W\",\"colorRed\":\"IndiaAllDistrict_colorRed__3irA9\",\"colorGreen\":\"IndiaAllDistrict_colorGreen__1xOfz\",\"hidden\":\"IndiaAllDistrict_hidden__2NYwb\",\"visibilityhidden\":\"IndiaAllDistrict_visibilityhidden__MefhK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cases_container__Dk1Kb\",\"customers\":\"Cases_customers__vXvDs\",\"testPadding\":\"Cases_testPadding__isG9K\",\"colorRed\":\"Cases_colorRed__17TAq\",\"colorGreen\":\"Cases_colorGreen__2Cs8B\",\"font8\":\"Cases_font8__2PdIx\",\"font11\":\"Cases_font11__14_SL\",\"fontWeight\":\"Cases_fontWeight__2N_VM\",\"colorRed1\":\"Cases_colorRed1__3iYfG\",\"colorGreen1\":\"Cases_colorGreen1__UawZi\",\"testPadding1\":\"Cases_testPadding1__3oeC4\",\"arrowCss\":\"Cases_arrowCss__3bxoR\",\"visiblehide\":\"Cases_visiblehide__2ZQRq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IndiaByState_container__3gYJP\",\"customers\":\"IndiaByState_customers__rdqWe\",\"class1\":\"IndiaByState_class1__3Q5gh\",\"class3\":\"IndiaByState_class3__2gSmu\",\"formControl\":\"IndiaByState_formControl__3XmAD\",\"arrowCss\":\"IndiaByState_arrowCss__DbDFq\",\"font8\":\"IndiaByState_font8__3S-QS\",\"font11\":\"IndiaByState_font11__1Q9aM\",\"fontWeight\":\"IndiaByState_fontWeight__2ClJ1\",\"colorRed1\":\"IndiaByState_colorRed1__1OpWu\",\"colorGreen1\":\"IndiaByState_colorGreen1__1a3NH\",\"testPadding\":\"IndiaByState_testPadding__3We9N\",\"testPadding1\":\"IndiaByState_testPadding1__8CIfK\",\"colorRed\":\"IndiaByState_colorRed__1fACL\",\"colorGreen\":\"IndiaByState_colorGreen__26Gu_\",\"hidden\":\"IndiaByState_hidden__3sT0O\",\"visibilityhidden\":\"IndiaByState_visibilityhidden__3F0vn\"};"],"sourceRoot":""}