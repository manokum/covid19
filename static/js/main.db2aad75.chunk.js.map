{"version":3,"sources":["components/Cases/Cases.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css","images/image.jpg","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","components/Cases/CasesByRate.jsx","components/IndiaState/IndiaByState.jsx","components/IndiaAllDistrict/IndiaAllDistrict.jsx","App.js","index.js","components/IndiaAllDistrict/IndiaAllDistrict.module.css","components/IndiaState/IndiaByState.module.css","components/Cards/Cards.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","indiaDailyValue","statewise","states","state","lastupdatedtime","Chart","console","log","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","lineChart","pop","borderColor","borderWidth","title","text","fontSize","position","maintainAspectRatio","scales","yAxes","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Info","flashColor","Date","toDateString","toLocaleTimeString","TableContainer","component","Paper","Table","customers","aria-label","TableHead","fontWeight","TableRow","TableCell","testPadding","colorRed1","colorGreen1","testPadding1","TableBody","scope","colorRed","colorGreen","Number","toFixed","font8","CasesByRate","row","IndiaByState","React","firstName","setFirstName","lastName","setLastName","allStateData","setallStateData","fetch","then","results","json","window","result","allSt","Object","keys","accepted","type","indexOf","filterTypes","test","values","test1","districtData","test2","test3","entries","product","reduce","totalCalories","active","deceased","delta","arrowCss","icons","arrowN","IndiaAllDistrict","datato","testlatlong","handleChange","event","handleSubmit","t","array","JSON","parse","stringify","replace","user","post","res","setState","this","length","district","districtZoneType","red","green","orange","Component","App","basename","image","src","alt","navcenter","role","navbar","navwrapper","exact","activeClassName","navbar__link__active","navbar__link","to","removeborder","globe","castle","homes","path","CountryPicker","Cards","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db2aad75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cases_container__3FIIu\",\"customers\":\"Cases_customers__33NBi\",\"testPadding\":\"Cases_testPadding__36lg8\",\"colorRed\":\"Cases_colorRed__2e3dW\",\"colorGreen\":\"Cases_colorGreen__JOhYe\",\"font8\":\"Cases_font8__1MT49\",\"font11\":\"Cases_font11__1cHOd\",\"fontWeight\":\"Cases_fontWeight__3WHiL\",\"colorRed1\":\"Cases_colorRed1__3ATAm\",\"colorGreen1\":\"Cases_colorGreen1__2eath\",\"testPadding1\":\"Cases_testPadding1__IAdc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1MxSr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2Sy7q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__EJRI6\",\"image\":\"App_image__3zfrv\",\"image1\":\"App_image1__1WZ8t\",\"MuiCardContent-root\":\"App_MuiCardContent-root__1-jIS\",\"navcenter\":\"App_navcenter__3h0h6\",\"navbar\":\"App_navbar__1TF81\",\"navbar__link\":\"App_navbar__link__2L-_F\",\"navbar__link__active\":\"App_navbar__link__active__2H9dY\",\"removeborder\":\"App_removeborder__2Ws3R\"};","module.exports = __webpack_public_path__ + \"static/media/image.2ce01c11.jpg\";","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\nconst url1 = 'https://api.covid19india.org/data.json';\r\nconst url2 = 'https://api.covid19india.org/state_district_wise.json';\r\nconst url3= 'https://newsapi.org/v2/top-headlines?country=in&apiKey=ac385d82856b4df09ca19e740e16eac3';\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const indiaDailyValue = async () => {\r\n  try{\r\n    const { data} = await axios.get(`${url1}`);\r\n\r\n    // return countries.map((country) => country.name);\r\n    return data.statewise.map(({ confirmed, deaths, recovered, state ,lastupdatedtime}) => ({ confirmed: confirmed, deaths: deaths, recovered : recovered,states : state ,lastupdatedtime: lastupdatedtime}));\r\n  } catch(err){\r\n    return err;\r\n  }\r\n};\r\n\r\nexport const indiaStateValue = async () => {\r\n  try{\r\n    const { data} = await axios.get(`${url2}`);\r\n\r\n    return data;\r\n    //return data.statewise.map(({ confirmed, deaths, recovered, state }) => ({ confirmed: confirmed, deaths: deaths, recovered : recovered,states : state}));\r\n  } catch(err){\r\n    return err;\r\n  }\r\n};\r\n\r\nexport const fetchNewsData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url3}`);\r\n\r\n    return data.articles;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Line, Polar, HorizontalBar,Bubble,Pie,Bar } from 'react-chartjs-2';\r\nimport { Doughnut,Scatter } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  console.log(\"Chart\",Chart)\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Pie\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'No of People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n         // title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    \r\n    dailyData[0] ? (\r\n      \r\n      <Bar\r\n      data={{\r\n        labels: [[...dailyData].pop().date],\r\n        datasets: [\r\n          {\r\n            label: 'Confirmed',\r\n            backgroundColor: 'rgba(0, 0, 255, 0.5)',\r\n            borderColor: 'rgba(0, 0, 255, 0.5)',\r\n            borderWidth: 2,\r\n            data: [[...dailyData].pop().confirmed]\r\n          },\r\n          {\r\n            label: 'Deaths',\r\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n            borderColor: 'rgba(0, 255, 0, 0.5)',\r\n            borderWidth: 2,\r\n            data: [[...dailyData].pop().deaths]\r\n          }\r\n        ]\r\n      }}\r\n      options={{\r\n        title:{\r\n          display:false,\r\n          text:'World Data',\r\n          fontSize:10\r\n        },\r\n        legend:{\r\n          display:true,\r\n          position:'bottom'\r\n        },\r\n         maintainAspectRatio: false ,\r\n        scales: {\r\n          yAxes: [{\r\n              //  gridLines: {\r\n              //     display: false,\r\n              // },\r\n              display : false\r\n          }]\r\n     }\r\n      }\r\n    }\r\n      />\r\n      // <Line\r\n      // data={{\r\n      //   labels: dailyData.map(({ date }) => date),\r\n      //   datasets: [{\r\n      //     data: dailyData.map((data) => data.confirmed),\r\n      //     label: 'Infected',\r\n      //     borderColor: '#3333ff',\r\n      //     fill: true,\r\n      //   }, {\r\n      //     data: dailyData.map((data) => data.deaths),\r\n      //     label: 'Deaths',\r\n      //     borderColor: 'red',\r\n      //     backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n      //     fill: true,\r\n      //   },\r\n      //   ],\r\n      // }}\r\n    ///>\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">World</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n      \r\n  \r\n  return (\r\n    <div className={styles.container}>\r\n      {/* <Grid container spacing={3} justify=\"center\">\r\n      \r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={confirmed.value} duration={1} separator=\",\" />\r\n              \r\n            </Typography>\r\n           \r\n          \r\n            <Typography variant=\"body2\" component=\"p\">\r\n              No of active cases\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n            \r\n              Recovered : <span className={(Number(((recovered.value)/(confirmed.value)*100)).toFixed(0))  > 25 ? styles.class3 : styles.class1 }>{Number(((recovered.value)/(confirmed.value)*100)).toFixed(0) }%</span>\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={recovered.value} duration={1} separator=\",\" />\r\n            </Typography>\r\n            \r\n            <Typography>\r\n            \r\n            </Typography>\r\n            <Typography></Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n              No.of recoveries made\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths : <span className={(Number(((deaths.value)/(confirmed.value)*100)).toFixed(0))  > 5 ? styles.class1 : styles.class2 }>{Number(((deaths.value)/(confirmed.value)*100)).toFixed(0) }%</span>\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              <CountUp start={0} end={deaths.value} duration={1} separator=\",\" />\r\n            </Typography>\r\n           \r\n            <Typography variant=\"body2\" component=\"p\">\r\n              Number of deaths COVID19.   \r\n            </Typography>\r\n            <Typography>\r\n            \r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card)}>\r\n        <CardContent>\r\n        <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            </CardContent>\r\n        </Grid>\r\n        \r\n      </Grid> */}\r\n\r\n{/* <table className={styles.customers}>\r\n<caption className = {styles.flashColor}>Last Updated : {new Date(lastUpdate).toDateString()} {new Date(lastUpdate).toLocaleTimeString()} </caption>\r\n   \r\n      <thead>\r\n        <tr>\r\n         <th>Confirmed</th>\r\n          <th>Recovered</th>\r\n          <th>Recovered Rate</th>\r\n          <th>Deaths</th>\r\n          <th>Deaths Rate</th>\r\n          \r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        \r\n          <tr>\r\n            <td>{confirmed.value}</td>\r\n            <td>{recovered.value}</td>\r\n            <td><span className={(Number(((recovered.value)/(confirmed.value)*100)).toFixed(0))> 25 ? styles.class3 : styles.class1 }>{Number(((recovered.value)/(confirmed.value)*100)).toFixed(0) }%</span></td>\r\n            <td>{deaths.value}</td>\r\n            <td><span className={(Number(((deaths.value)/(confirmed.value)*100)).toFixed(0))  > 5 ? styles.class1 : styles.class2 }>{Number(((deaths.value)/(confirmed.value)*100)).toFixed(0) }%</span></td>\r\n          </tr>  \r\n    \r\n      </tbody>\r\n    </table>  */}\r\n<caption className = {styles.flashColor}>Last Updated : {new Date(lastUpdate).toDateString()} {new Date(lastUpdate).toLocaleTimeString()} </caption>\r\n<TableContainer component={Paper}>\r\n      <Table className={styles.customers} aria-label=\"simple table\">\r\n        <TableHead className={styles.fontWeight}>\r\n          <TableRow>\r\n            <TableCell className={styles.fontWeight}>Confirmed</TableCell>\r\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorRed1}>Recovered</TableCell>\r\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorGreen1}>R Rate.</TableCell>\r\n            <TableCell  className={styles.fontWeight} className={styles.testPadding1}>Deaths</TableCell>\r\n            <TableCell className={styles.fontWeight} className={styles.testPadding1}>D Rate.</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          \r\n            <TableRow >\r\n              <TableCell component=\"th\" scope=\"row\" className={styles.fontWeight} className={styles.testPadding1}>\r\n              {confirmed.value}\r\n              </TableCell>\r\n              <TableCell  className={styles.colorRed} className={styles.colorRed}>{recovered.value}</TableCell>\r\n              <TableCell  className={styles.colorGreen} className={styles.colorGreen}>{Number(((recovered.value)/(confirmed.value)*100)).toFixed(0) }%</TableCell>\r\n              <TableCell   className={styles.testPadding}>{deaths.value}</TableCell>\r\n              <TableCell  className={styles.font8}>{Number(((deaths.value)/(confirmed.value)*100)).toFixed(0) }%</TableCell>\r\n              \r\n            </TableRow>\r\n       \r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </div>\r\n  );\r\n};\r\nexport default Info;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { Line, Polar, HorizontalBar,Bubble,Pie,Bar } from 'react-chartjs-2';\r\nimport { indiaDailyValue } from '../../api';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport styles from './Cases.module.css';\r\n\r\nconst CasesByRate = ({  data: { confirmed, deaths, recovered, states,lastupdatedtime } }) => {\r\n  \r\n  const [state,setCountries] = useState([]);\r\n  console.log(\"data CasesByRate\",state)\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await indiaDailyValue());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const options = {\r\n    scales: {\r\n         xAxes: [{\r\n             stacked: true\r\n         }],\r\n         yAxes: [{\r\n             stacked: true\r\n         }]\r\n     }\r\n }\r\n\r\n let data ={ \r\n   datasets:[{\r\n     label: 'Confirmed',\r\n       data: state.map((data) => data.confirmed),\r\n       backgroundColor: ['rgba(0, 0, 255, 0.5)'],\r\n     },\r\n     {\r\n       label: 'Deaths',\r\n       data: state.map((data) => data.deaths),\r\n       backgroundColor: ['rgba(0, 255, 0, 0.5)'],\r\n     },\r\n     {\r\n        label: 'Recovered',\r\n        data: state.map((data) => data.recovered),\r\n        backgroundColor: ['rgba(255, 0, 0, 0.5)'],\r\n      },\r\n    //   {\r\n    //     label: 'states',\r\n    //     data: state.map((data) => data.states),\r\n    //     backgroundColor: ['rgba(255, 0, 0, 0.5)'],\r\n    //   }\r\n    ],\r\n   labels:['India']\r\n }\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar \r\n      data={data}\r\n       options={options}\r\n           \r\n            \r\n           \r\n        // }}\r\n        // data={{\r\n        //   labels: ['Infected', 'Recovered', 'Deaths','State'],\r\n        //   datasets: [\r\n        //     {\r\n        //       label: 'No of People',\r\n        //       backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n        //       data: state.map((data) => data.confirmed),\r\n        //     },\r\n        //   ],\r\n        // }}\r\n        // options={{\r\n        //   legend: { display: false },\r\n        //   title: { display: true, text: `Current state in ${country}` },\r\n        // }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    // <FormControl className={styles.formControl}>\r\n    //   <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n    //     <option value=\"\">Global</option>\r\n    //     {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n    //   </NativeSelect>\r\n    // </FormControl> confirmed, deaths, recovered,\r\n    /**\r\n     * \r\n     * .data.map((product,i) => (\r\n          <tr key={i}>\r\n     */\r\n    <div className={styles.container}>\r\n    {/* { <table className={styles.customers}>\r\n      <caption>All States Data</caption>\r\n      <thead>\r\n        <tr>\r\n          <th>States</th>\r\n          <th>Confirmed</th>\r\n          <th>Recovered</th>\r\n          <th>Deaths</th>\r\n          \r\n          <th>Last Updated</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody >\r\n        {state.map((product,i) => (\r\n          <tr key={i}>\r\n            <td>{product.states}</td>\r\n            <td className={styles.colorRed}>{product.confirmed}</td>\r\n           \r\n            <td  className={styles.colorGreen}><div>{product.recovered}</div><div>{Number(((product.recovered)/(product.confirmed)*100)).toFixed(0)  }%</div></td>\r\n            <td><div>{product.deaths} </div><div>{Number(((product.deaths)/(product.confirmed)*100)).toFixed(0)  }%</div></td>\r\n            <td className={styles.font8}>{product.lastupdatedtime}</td> \r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table> } */}\r\n\r\n<TableContainer component={Paper}>\r\n      <Table className={styles.customers} aria-label=\"simple table\">\r\n        <TableHead className={styles.fontWeight}>\r\n          <TableRow>\r\n            <TableCell className={styles.fontWeight}>States</TableCell>\r\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorRed1}>Confirmed</TableCell>\r\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorGreen1}>Recovered</TableCell>\r\n            <TableCell  className={styles.fontWeight} className={styles.testPadding1}>Deaths</TableCell>\r\n            <TableCell className={styles.fontWeight} className={styles.testPadding1}>Last Updated</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {state.map((row,i) => (\r\n            <TableRow key={i}>\r\n              <TableCell component=\"th\" scope=\"row\" className={styles.fontWeight} className={styles.testPadding1}>\r\n                {row.states}\r\n              </TableCell>\r\n              <TableCell  className={styles.colorRed} className={styles.colorRed}>{row.confirmed}</TableCell>\r\n              <TableCell  className={styles.colorGreen} className={styles.colorGreen}><div>{row.recovered}</div><div>{Number(((row.recovered)/(row.confirmed)*100)).toFixed(0)  }%</div></TableCell>\r\n              <TableCell   className={styles.testPadding}><div>{row.deaths} </div><div>{Number(((row.deaths)/(row.confirmed)*100)).toFixed(0)  }%</div></TableCell>\r\n              <TableCell  className={styles.font8}>{row.lastupdatedtime}</TableCell>\r\n              \r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n\r\n\r\n  </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default CasesByRate;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { Line, Polar, HorizontalBar,Bubble,Pie,Bar } from 'react-chartjs-2';\r\nimport { indiaStateValue } from '../../api';\r\nimport icons from 'glyphicons'  \r\n// import _ from 'underscore'  \r\nimport styles from './IndiaByState.module.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nconst IndiaByState = ({ data }) => {\r\n  \r\n  // const [state,setCountries] = useState([]);\r\n  // console.log(\"data IndiaByState\",[state])\r\n\r\n  \r\n  // useEffect(() => {\r\n  //   const fetchAPI = async () => {\r\n  //     setCountries(await indiaStateValue());\r\n  //   };\r\n  //   fetchAPI();\r\n  const [firstName, setFirstName] = React.useState(null);\r\n  const [lastName, setLastName] = React.useState(null);\r\n  const [allStateData, setallStateData] = React.useState(null);\r\n  \r\n  React.useEffect(() => {\r\n    fetch('https://api.covid19india.org/state_district_wise.json')\r\n      .then(results => results.json())\r\n      .then(data => {\r\n        console.log(\"data\",data)\r\n        window.data= data;\r\n         const [name] = [data];\r\n         function filterTypes(accepted) {\r\n      \r\n          for (var type in window.data)\r\n              if (accepted.indexOf(type) > -1) \r\n              window.result[type] = window.data[type];\r\n          console.log(\"result\", window.result);\r\n      }\r\n  \r\n      // console.log(\"const [name] = [data];\",[name])\r\n      window.result = {}  \r\n  \r\n  console.log(\"widnow Data\",window.data)\r\n  const allSt = Object.keys(window.data);\r\n  console.log(\"widnow allSt\",allSt)\r\n  setallStateData(allSt);\r\n  filterTypes(['Andaman and Nicobar Islands']);\r\n  console.log(\"window.result\",window.result)\r\n  const test  = Object.values(window.result);\r\n  console.log(\"window.result['key'].districtData\",test);\r\n  const test1 = test[0].districtData;\r\n  console.log(\"test1\",test1)\r\n  Object.keys(test1);\r\n  const test2 = Object.keys(test1);\r\n  const test3 = Object.entries(test1);\r\n  console.log(\"test2\",test2)\r\n  console.log(\"test3\",test3)\r\n     setFirstName(test3);\r\n     setLastName(test2);\r\n        \r\n      });\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  // if(!state) {\r\n   \r\n  //   window.result = {};\r\n  //   function filterTypes(accepted) {\r\n      \r\n  //     for (var type in state)\r\n  //         if (accepted.indexOf(type) > -1) \r\n  //         window.result[type] = state[type];\r\n  //     console.log(\"result\", window.result);\r\n  // }\r\n  // filterTypes(['Maharashtra']);\r\n\r\n  // }\r\n  function handleCountryChange(e){\r\n    console.log(\"inside handleCountryChange\",e)\r\n    window.result = {};\r\n    for (var type in window.data)\r\n    if (e.indexOf(type) > -1) \r\n    window.result[type] = window.data[type];\r\n    console.log(\"widnow Data\",window.data)\r\n    const allSt = Object.keys(window.data);\r\n    console.log(\"widnow allSt\",allSt)\r\n    setallStateData(allSt);\r\n    //filterTypes(['Jharkhand']);\r\n    \r\n    console.log(\"window.result\",window.result)\r\n    const test  = Object.values(window.result);\r\n    console.log(\"window.result['key'].districtData\",test);\r\n    const test1 = test[0].districtData;\r\n    console.log(\"test1\",test1)\r\n    Object.keys(test1);\r\n    const test2 = Object.keys(test1);\r\n    const test3 = Object.entries(test1);\r\n    console.log(\"test2\",test2)\r\n    console.log(\"test3\",test3)\r\n       setFirstName(test3);\r\n       setLastName(test2);\r\n    \r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      {!firstName || !lastName  || !allStateData ? 'Loading...' : \r\n       <div>\r\n        <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        {/* <option value=\"\">Assam</option> */}\r\n        {allStateData.map((product, i) => <option key={i} value={product}>{product}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n     \r\n      {/* <table className={styles.customers}>\r\n      <caption>All States Data</caption>\r\n      <thead>\r\n        <tr>\r\n         <th>District</th>\r\n          <th>Confirmed</th>\r\n          <th>Active</th>\r\n          <th>Deaths</th>\r\n          <th>Recovered</th>\r\n          \r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {firstName.map((product,i) => (\r\n          <tr key={i}>\r\n            <td className={styles.tdBreak}>{product[0]}</td>\r\n            <td className={(product[1].confirmed)  > 25 ? styles.class3 : styles.class1 }><div>{product[1].confirmed}  </div><div>{product[1].delta.confirmed}<span className={styles.arrowCss}>{icons.arrowN}</span></div></td>\r\n            <td>{product[1].active}</td>\r\n            <td><div>{product[1].deceased}</div> <div>{product[1].delta.deceased}<span className={styles.arrowCss}>{icons.arrowN}</span></div></td>\r\n            <td><div>{product[1].recovered}</div><div>{product[1].delta.recovered}<span className={styles.arrowCss}>{icons.arrowN}</span></div></td>\r\n            \r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>  */}\r\n   \r\n    \r\n    \r\n    \r\n    <TableContainer component={Paper}>\r\n      <Table className={styles.customers} aria-label=\"simple table\">\r\n        <TableHead className={styles.fontWeight}>\r\n          <TableRow>\r\n            <TableCell className={styles.fontWeight}><div>District</div><div>Total</div>Rate<div></div></TableCell>\r\n            {/* <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorRed1}><div>Confirm</div><div>{firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].confirmed, 0)}</div><div><p className={styles.hidden}>T</p></div></TableCell> */}\r\n  <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorRed1}><div>Confirmed</div><div>{firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].confirmed, 0)}</div><div>-</div></TableCell>\r\n            <TableCell  className={styles.fontWeight} className={styles.testPadding} className={styles.colorGreen1}><div>Active</div><div>{firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].active, 0)}</div><div>{Number(((firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].active, 0)/(firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].confirmed, 0)))*100)).toFixed(0)  }%</div></TableCell>\r\n            <TableCell  className={styles.fontWeight} className={styles.testPadding1}><div>Deaths</div><div>{firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].deceased, 0)}</div><div>{Number(((firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].deceased, 0)/(firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].confirmed, 0)))*100)).toFixed(0)  }%</div></TableCell>\r\n            <TableCell className={styles.fontWeight} className={styles.testPadding1}><div>Recovered</div><div>{firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].recovered, 0)}</div><div>{Number(((firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].recovered, 0)/(firstName.reduce((totalCalories, firstName) => totalCalories + firstName[1].confirmed, 0)))*100)).toFixed(0)  }%</div></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        {/* <span>{_.firstName(_.map(product, confirmed => confirmed.total))}</span> */}\r\n          {firstName.map((product,i) => (\r\n            <TableRow key={i}>\r\n              <TableCell component=\"th\" scope=\"row\" className={styles.fontWeight} className={styles.testPadding1}>\r\n              {product[0]}\r\n              </TableCell>\r\n              <TableCell  className={styles.colorRed} className={styles.colorRed}><div>{product[1].confirmed}  </div><div>{product[1].delta.confirmed}<span className={styles.arrowCss}>{icons.arrowN}</span></div></TableCell>\r\n              <TableCell  className={styles.colorGreen} className={styles.colorGreen}>{product[1].active}</TableCell>\r\n              <TableCell   className={styles.testPadding}><div>{product[1].deceased}</div> <div>{product[1].delta.deceased}<span className={styles.arrowCss}>{icons.arrowN}</span></div></TableCell>\r\n              <TableCell  className={styles.font8}><div>{product[1].recovered}</div><div>{product[1].delta.recovered}<span className={styles.arrowCss}>{icons.arrowN}</span></div></TableCell>\r\n              \r\n            </TableRow>\r\n          ))}\r\n          \r\n          {/* {_.sum(_.map(firstName, product => product[1].total))} \r\n          const meals = [\r\n  { calorie: 10},\r\n  { calorie: 15},\r\n  { calorie: 20}\r\n];\r\n\r\nconst calorieTotal = meals.reduce((totalCalories, meal) => totalCalories + meal.calorie, 0);\r\n\r\nconsole.log(calorieTotal);\r\n          */}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    \r\n    </div>}\r\n    </div>\r\n    \r\n\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default IndiaByState;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport SelectSearch from 'react-select-search';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport styles from './IndiaAllDistrict.module.css';\r\n\r\nexport default class IndiaAllDistrict extends React.Component {\r\n  state = {\r\n    datato :[],\r\n    testlatlong: []\r\n  }\r\n  \r\n  handleChange = event => {\r\n    console.log(\"event\",event)\r\n    //const test = [event];\r\n    //console.log(\"test\",test)\r\n    //this.setState({ testlatlong: test });\r\n    this.handleSubmit(event);\r\n  }\r\n\r\n  handleSubmit = (t) => {\r\n    //event.preventDefault();\r\n    console.log(\"value of t\",t)\r\n    var array = JSON.parse(\"[[\" + t + \"]]\");\r\n    const string = JSON.stringify(t);\r\n    string.replace (/\"/g,''); \r\nconsole.log(\"inside submit string\",array)\r\n    const user = {\r\n      \"latlngs\":array,\r\n      \"key\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtYWlsSWRlbnRpdHkiOiJtYW5vcmFuamFua3VtQGdtYWlsLmNvbSJ9.65QsDiBeKvnUnswtFjmfTEUrUt6tiaPZ92_1jvQMsCo\"\r\n    };\r\n\r\n    axios.post(`https://data.geoiq.io/dataapis/v1.0/covid/locationcheck`,  user )\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n       //this.state.datato = res.data;\r\n       this.setState({\r\n        datato: res.data\r\n      });\r\n      })\r\n      console.log(\"this.state.datato\",this.state.datato)\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const options = [\r\n      {name: 'Bangalore', value: [[12.959743999999999,77.6470528]]},\r\n      {name: 'Mumbai', value: [[19.0760 ,72.8777]]}, \r\n      {name: 'Dhanbad', value: [[23.80039349,86.41998572]]},\r\n      {name: 'Jamshedpur', value: [[22.78753542\t ,86.19751868]]},\r\n      {name: 'Ranchi', value: [[23.37000633,85.33002641]]},\r\n      {name: 'Bokaro', value: [[ 23.6693,86.1511]]},\r\n      {name: 'Pune', value: [[ 18.5204,73.8567]]},\r\n      {name: ' Andaman And Nicobar', value: [[ 11.66702557,92.73598262]]},\r\n      {name: 'Andhra Pradesh', value: [[ 14.7504291,78.57002559]]},\r\n  \r\n  \r\n      {name: 'Arunachal Pradesh', value: [[27.10039878,93.61660071]]},\r\n      {name: 'Assam', value: [[26.7499809,94.21666744]]}, \r\n      {name: 'Bihar', value: [[25.78541445,87.4799727]]},\r\n      {name: 'Delhi', value: [[28.6699929,77.23000403]]},\r\n      {name: 'Kerala', value: [[8.900372741,76.56999263]]},\r\n      {name: 'Bokaro', value: [[ 23.6693,86.1511]]},\r\n      {name: 'Pune', value: [[ 18.5204,73.8567]]},\r\n      {name: ' Andaman And Nicobar', value: [[ 11.66702557,92.73598262]]},\r\n      {name: 'Andhra Pradesh', value: [[ 14.7504291,78.57002559]]},\r\n      \r\n      \r\n      \r\n       \r\n      // Chandigarh (1)\t30.71999697\t76.78000565\r\n      // Chhattisgarh (3)\t22.09042035\t82.15998734\r\n      // Dadra And Nagar Haveli (12)\t20.26657819\t73.0166178\r\n     \r\n      // Goa (1)\t15.491997\t73.81800065\r\n      // Haryana (10)\t28.45000633\t77.01999101\r\n      // Himachal Pradesh (2)\t31.10002545\t77.16659704\r\n      // Jammu And Kashmir (4)\t34.29995933\t74.46665849\r\n      // Jharkhand (3)\t23.80039349\t86.41998572\r\n      // Karnataka (16)\t12.57038129\t76.91999711\r\n       \r\n      // Lakshadweep (1)\t10.56257331\t72.63686717\r\n      // Madhya Pradesh (8)\t21.30039105\t76.13001949\r\n      // Maharashtra (20)\t19.25023195\t73.16017493\r\n      // Manipur (1)\t24.79997072\t93.95001705\r\n      // Meghalaya (1)\t25.57049217\t91.8800142\r\n      // Mizoram (1)\t23.71039899\t92.72001461\r\n      // Nagaland (1)\t25.6669979\t94.11657019\r\n      // Orissa (6)\t19.82042971\t85.90001746\r\n      // Puducherry (1)\t11.93499371\t79.83000037\r\n      // Punjab (6)\t31.51997398\t75.98000281\r\n      // Rajasthan (12)\t26.44999921\t74.63998124\r\n      // Sikkim (1)\t27.3333303\t88.6166475\r\n      // Tamil Nadu (19)\t12.92038576\t79.15004187\r\n      // Tripura (1)\t23.83540428\t91.27999914\r\n      // Uttar Pradesh (29)\t27.59998069\t78.05000565\r\n      // Uttaranchal (1)\t30.32040895\t78.05000565\r\n      // West Bengal (10)\t22.58039044\t88.32994665\t\r\n  ];\r\n    return (\r\n      <div>\r\n        {/* <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name:\r\n            <input type=\"text\" name=\"name\" onChange={this.handleChange} />\r\n          </label>\r\n          <button type=\"submit\">Search</button>\r\n        </form> */}\r\n        {/* <SelectSearch options={options} defaultValue=\"sv\" name=\"language\" placeholder=\"Choose your language\" /> */}\r\n\r\n        <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\"  onChange={(e) => this.handleChange(e.target.value)} >\r\n        <option value=\"\">Select State/District</option>\r\n        {options.map((country, i) => <option key={i} value={country.value}>{country.name}</option>) }\r\n      </NativeSelect>\r\n    </FormControl>\r\n    {/* <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      options={options}\r\n      getOptionLabel={(option) => option.name}\r\n      style={{ width: 300 }}\r\n      renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\r\n    /> */}\r\n        { this.state.datato.length != 0  ? <table className={styles.customers}>\r\n      <caption>Zone Data</caption>\r\n      <thead>\r\n        <tr>\r\n         <th>Zone </th>\r\n          <th>Zone Type</th>\r\n          \r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {this.state.datato.data.map((product,i) => (\r\n          <tr key={i}>\r\n            <td>{product.district}</td>\r\n            <td className={product.districtZoneType.length === 8 ? styles.red : product.districtZoneType.length === 10 ? styles.green : styles.orange }>{product.districtZoneType}</td>\r\n          </tr>\r\n        ))}\r\n        {/* <tr><td>{this.state.datato.data[0].containmentsAvailability}</td></tr> */}\r\n      </tbody>\r\n        </table> : <p>Please enter state name to see data</p>}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nimport { Cards, CountryPicker, Chart,CasesByRate,IndiaByState,IndiaAllDistrict,AllNews } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport image from './images/image.jpg';\r\nimport icons from 'glyphicons'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  HashRouter,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <HashRouter basename='/'>\r\n      {/* <Router> */}\r\n      <div className={styles.container}>\r\n       \r\n\r\n<img className={styles.image} src={image} alt=\"COVID-19\" />\r\n<nav className={styles.navcenter} role=\"navigation\" className={styles.navbar} >\r\n    {/* <div className={styles.navwrapper}>\r\n    <ul>\r\n            <li>\r\n              <Link to=\"/\">Indian State Data</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/world\">World Statistics</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/india\">India All State</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/zonedata\">India Zone Data</Link>\r\n            </li>\r\n          </ul>\r\n    </div> */}\r\n    <div className={styles.navwrapper}>\r\n    <NavLink\r\n      exact\r\n      activeClassName={styles.navbar__link__active}\r\n      className={styles.navbar__link}\r\n      to=\"/\"\r\n    >\r\n      {/* <img\r\n    src=\"./images/image.jpg\"\r\n    alt=\"Unactive Link Image\"\r\n    height=\"45\"\r\n    width=\"45\" \r\n  /> */} \r\n  <span className={styles.removeborder}>{icons.globe}</span>\r\n      World\r\n    </NavLink>\r\n    <NavLink\r\n      activeClassName={styles.navbar__link__active}\r\n      className={styles.navbar__link}\r\n      to=\"/indiaall\"\r\n    >  <span className={styles.removeborder}>{icons.castle}</span>\r\n      India\r\n    </NavLink>\r\n    <NavLink\r\n      activeClassName={styles.navbar__link__active}\r\n      className={styles.navbar__link}\r\n      to=\"/india\"\r\n    ><span className={styles.removeborder}>{icons.map}</span>\r\n      State\r\n    </NavLink>\r\n    <NavLink\r\n      activeClassName={styles.navbar__link__active}\r\n      className={styles.navbar__link}\r\n      to=\"/zonedata\"\r\n    ><span className={styles.removeborder}>{icons.homes}</span>\r\n      Zone\r\n    </NavLink>\r\n    </div>\r\n</nav>\r\n\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n        <Route exact path=\"/\">\r\n          <div className={styles.container}>\r\n          {/* <img className={styles.image} src={image} alt=\"COVID-19\" /> */}\r\n        \r\n          <div className={styles.container}>\r\n          \r\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n           <Chart data={data} country={country} /> \r\n           <Cards data={data} />\r\n          {/* < AllNews/> */}\r\n           </div>\r\n          {/* <IndiaAllDistrict/> */}\r\n          {/* <CasesByRate data={data} /> */}\r\n          </div>\r\n          </Route>\r\n          <Route exact path=\"/indiaall\">\r\n          <div className={styles.container}>\r\n          <CasesByRate data={data} />\r\n          </div>\r\n          \r\n          </Route>\r\n          <Route exact path=\"/india\">\r\n          <IndiaByState/>\r\n          </Route>\r\n          <Route exact path=\"/zonedata\">\r\n          <div className={styles.container}>\r\n          <IndiaAllDistrict/>\r\n          </div>\r\n          </Route>\r\n         \r\n        </Switch>\r\n      </div>\r\n    {/* </Router> */}\r\n      {/* // <div className={styles.container}>\r\n      //   <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n      //   <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n      //   <Chart data={data} country={country} /> \r\n      //   <Cards data={data} />\r\n      //   <CasesByRate data={data} /> */}\r\n     \r\n     </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IndiaAllDistrict_container__3dGOf\",\"customers\":\"IndiaAllDistrict_customers__1Cb_g\",\"class1\":\"IndiaAllDistrict_class1__1LSvj\",\"class3\":\"IndiaAllDistrict_class3__3OFyp\",\"formControl\":\"IndiaAllDistrict_formControl__1U3bQ\",\"green\":\"IndiaAllDistrict_green__3vp6k\",\"red\":\"IndiaAllDistrict_red__3JiEG\",\"orange\":\"IndiaAllDistrict_orange__3_J07\",\"font8\":\"IndiaAllDistrict_font8__3XO8o\",\"font11\":\"IndiaAllDistrict_font11__3HUhI\",\"fontWeight\":\"IndiaAllDistrict_fontWeight__37aCK\",\"colorRed1\":\"IndiaAllDistrict_colorRed1__3bOfv\",\"colorGreen1\":\"IndiaAllDistrict_colorGreen1__2z_NU\",\"testPadding\":\"IndiaAllDistrict_testPadding__3r2o6\",\"testPadding1\":\"IndiaAllDistrict_testPadding1__3hVns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IndiaByState_container__6EXxe\",\"customers\":\"IndiaByState_customers__2ZGOE\",\"class1\":\"IndiaByState_class1__1UW0a\",\"class3\":\"IndiaByState_class3__2OH9b\",\"formControl\":\"IndiaByState_formControl__2pWqR\",\"arrowCss\":\"IndiaByState_arrowCss__27i9U\",\"font8\":\"IndiaByState_font8__2YkYx\",\"font11\":\"IndiaByState_font11__3-AAW\",\"fontWeight\":\"IndiaByState_fontWeight__3y8xU\",\"colorRed1\":\"IndiaByState_colorRed1__17FPK\",\"colorGreen1\":\"IndiaByState_colorGreen1__1LJWd\",\"testPadding\":\"IndiaByState_testPadding__3JBg_\",\"testPadding1\":\"IndiaByState_testPadding1__3Bl0d\",\"colorRed\":\"IndiaByState_colorRed__2lThZ\",\"colorGreen\":\"IndiaByState_colorGreen__dP2jO\",\"hidden\":\"IndiaByState_hidden__3zS2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1tzBs\",\"card\":\"Cards_card__3zxBd\",\"infected\":\"Cards_infected__3c_hc\",\"recovered\":\"Cards_recovered__20rvG\",\"deaths\":\"Cards_deaths__2w-uT\",\"customers\":\"Cards_customers__2pUE0\",\"MuiCardContent-root\":\"Cards_MuiCardContent-root__3nXK5\",\"width-300\":\"Cards_width-300__297CG\",\"class1\":\"Cards_class1__3aeDl\",\"class2\":\"Cards_class2__10-GJ\",\"class3\":\"Cards_class3__2Fb_t\",\"formControl\":\"Cards_formControl__2EdyZ\",\"flashColor\":\"Cards_flashColor__1-aK6\",\"font8\":\"Cards_font8__Km3Gt\",\"font11\":\"Cards_font11__1kAwo\",\"fontWeight\":\"Cards_fontWeight__2UMKJ\",\"colorRed1\":\"Cards_colorRed1__3iP20\",\"colorGreen1\":\"Cards_colorGreen1__KwgGy\",\"testPadding\":\"Cards_testPadding__3ik4H\",\"testPadding1\":\"Cards_testPadding1__1FQ8R\",\"colorRed\":\"Cards_colorRed__3JZ83\",\"colorGreen\":\"Cards_colorGreen__3Lnz9\"};"],"sourceRoot":""}