{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","components/Cases/CasesByRate.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cases/Cases.module.css","images/image.jpg"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","indiaDailyValue","statewise","states","state","Chart","console","log","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Info","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Number","toFixed","class3","class1","class2","Date","toDateString","CasesByRate","scales","xAxes","stacked","yAxes","App","setState","this","image","src","alt","CountryPicker","Cards","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1350b4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"MuiCardContent-root\":\"Cards_MuiCardContent-root__2u6Qq\",\"width-300\":\"Cards_width-300__1T_LM\",\"class1\":\"Cards_class1__HxjdV\",\"class2\":\"Cards_class2__3xuUV\",\"class3\":\"Cards_class3__3QEek\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\nconst url1 = 'https://api.covid19india.org/data.json';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const indiaDailyValue = async () => {\n  try{\n    const { data} = await axios.get(`${url1}`);\n\n    // return countries.map((country) => country.name);\n    return data.statewise.map(({ confirmed, deaths, recovered, state }) => ({ confirmed: confirmed, deaths: deaths, recovered : recovered,states : state}));\n  } catch(err){\n    return err;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Line, Polar, HorizontalBar,Bubble,Pie } from 'react-chartjs-2';\nimport { Doughnut,Scatter } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  console.log(\"Chart\",Chart)\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Pie\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'No of People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <HorizontalBar\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n  \n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport Select from \"react-dropdown-select\";\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n      {/* <Select options={countries.map((country, i) => {country})} onChange={(e) => handleCountryChange(e.target.value)} /> */}\n      {/* <Select\n  multi\n  options={options}\n  onChange={(values) => this.onChange(values)}\n/> */}\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n      \n  \n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n      \n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={confirmed.value} duration={1} separator=\",\" />\n              \n            </Typography>\n           \n            {/* <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography> */}\n            <Typography variant=\"body2\" component=\"p\">\n              No of active cases\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              {/* <span>Recovered : {Number(((recovered.value)/(confirmed.value)*100)).toFixed(0) }%</span> */}\n              Recovered : <span className={(Number(((recovered.value)/(confirmed.value)*100)).toFixed(0))  > 25 ? styles.class3 : styles.class1 }>{Number(((recovered.value)/(confirmed.value)*100)).toFixed(0) }%</span>\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={recovered.value} duration={1} separator=\",\" />\n            </Typography>\n            {/* <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography> */}\n            <Typography>\n            \n            </Typography>\n            <Typography></Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              No.of recoveries made\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths : <span className={(Number(((deaths.value)/(confirmed.value)*100)).toFixed(0))  > 5 ? styles.class1 : styles.class2 }>{Number(((deaths.value)/(confirmed.value)*100)).toFixed(0) }%</span>\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={deaths.value} duration={1} separator=\",\" />\n            </Typography>\n            {/* <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography> */}\n            <Typography variant=\"body2\" component=\"p\">\n              Number of deaths COVID19.   \n            </Typography>\n            <Typography>\n            \n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card)}>\n        <CardContent>\n        <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            </CardContent>\n        </Grid>\n        \n      </Grid>\n    </div>\n  );\n};\nexport default Info;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { Line, Polar, HorizontalBar,Bubble,Pie,Bar } from 'react-chartjs-2';\nimport { indiaDailyValue } from '../../api';\n\nimport styles from './Cases.module.css';\n\nconst CasesByRate = ({  data: { confirmed, deaths, recovered, states } }) => {\n  const [state,setCountries] = useState([]);\n  console.log(\"data CasesByRate\",state)\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await indiaDailyValue());\n    };\n    fetchAPI();\n  }, []);\n\n  const options = {\n    scales: {\n         xAxes: [{\n             stacked: true\n         }],\n         yAxes: [{\n             stacked: true\n         }]\n     }\n }\n\n let data ={ \n   datasets:[{\n     label: 'Confirmed',\n       data: state.map((data) => data.confirmed),\n       backgroundColor: ['rgba(0, 0, 255, 0.5)'],\n     },\n     {\n       label: 'Deaths',\n       data: state.map((data) => data.deaths),\n       backgroundColor: ['rgba(0, 255, 0, 0.5)'],\n     },\n     {\n        label: 'Recovered',\n        data: state.map((data) => data.recovered),\n        backgroundColor: ['rgba(255, 0, 0, 0.5)'],\n      },\n    //   {\n    //     label: 'states',\n    //     data: state.map((data) => data.states),\n    //     backgroundColor: ['rgba(255, 0, 0, 0.5)'],\n    //   }\n    ],\n   labels:['India']\n }\n\n  const barChart = (\n    confirmed ? (\n      <Bar \n      data={data}\n       options={options}\n           \n            \n           \n        // }}\n        // data={{\n        //   labels: ['Infected', 'Recovered', 'Deaths','State'],\n        //   datasets: [\n        //     {\n        //       label: 'No of People',\n        //       backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        //       data: state.map((data) => data.confirmed),\n        //     },\n        //   ],\n        // }}\n        // options={{\n        //   legend: { display: false },\n        //   title: { display: true, text: `Current state in ${country}` },\n        // }}\n      />\n    ) : null\n  );\n\n  return (\n    // <FormControl className={styles.formControl}>\n    //   <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n    //     <option value=\"\">Global</option>\n    //     {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n    //   </NativeSelect>\n    // </FormControl>\n    <div className={styles.container}>\n    { barChart }\n  </div>\n  );\n};\n\n\n\n\nexport default CasesByRate;\n","import React from 'react';\n\nimport { Cards, CountryPicker, Chart,CasesByRate } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\nimport image from './images/image.jpg';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} /> \n        <Cards data={data} />\n        <CasesByRate data={data} />\n     \n       \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"MuiCardContent-root\":\"App_MuiCardContent-root__VrPBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cases_container__Dk1Kb\"};","module.exports = __webpack_public_path__ + \"static/media/image.2ce01c11.jpg\";"],"sourceRoot":""}